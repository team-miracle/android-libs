/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package android.support.interpolator;

public final class R {
  public static final class anim {
    public static int no_anim=0x00000000;
    public static int task_open_enter=0x00000000;
  }
  public static final class animator {
    public static int all_apps_fastscroll_icon_anim=0x00000000;
    public static int discovery_bounce=0x00000000;
    public static int overview_button_anim=0x00000000;
  }
  public static final class array {
    public static int icon_shape_override_paths_names=0x00000000;
    /**
     * Values for icon shape overrides. These should correspond to entries defined
     * in icon_shape_override_paths_names
     */
    public static int icon_shape_override_paths_values=0x00000000;
  }
  public static final class attr {
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int allAppsInterimScrimAlpha=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int allAppsNavBarScrimColor=0x00000000;
    /**
     * Attributes used for launcher theme
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int allAppsScrimColor=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int ambientShadowBlur=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int ambientShadowColor=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int canThumbDetach=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int centerVertically=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int className=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int container=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>folder</td><td>2</td><td></td></tr>
     * <tr><td>hotseat</td><td>1</td><td></td></tr>
     * <tr><td>workspace</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int containerType=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int coordinatorLayoutStyle=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int darkTintColor=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int defaultLayoutId=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int demoModeLayoutId=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int fastScrollEnabled=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int fastScrollHorizontalThumbDrawable=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int fastScrollHorizontalTrackDrawable=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int fastScrollVerticalThumbDrawable=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int fastScrollVerticalTrackDrawable=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int folderItems=0x00000000;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int font=0x00000000;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fontProviderAuthority=0x00000000;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int fontProviderCerts=0x00000000;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static int fontProviderFetchStrategy=0x00000000;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static int fontProviderFetchTimeout=0x00000000;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fontProviderPackage=0x00000000;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fontProviderQuery=0x00000000;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int fontStyle=0x00000000;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fontVariationSettings=0x00000000;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int fontWeight=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int icon=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all_apps</td><td>1</td><td></td></tr>
     * <tr><td>folder</td><td>2</td><td></td></tr>
     * <tr><td>shortcut_popup</td><td>4</td><td></td></tr>
     * <tr><td>widget_section</td><td>3</td><td></td></tr>
     * <tr><td>workspace</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int iconDisplay=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int iconSize=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int iconSizeOverride=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int iconTextSize=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int isMainColorDark=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int isWorkspaceDarkText=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int key=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int keyShadowBlur=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int keyShadowColor=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int keyShadowOffset=0x00000000;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int keylines=0x00000000;
    /**
     * landscapeIconSize defaults to iconSize, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int landscapeIconSize=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int layoutHorizontal=0x00000000;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extandroidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int layoutManager=0x00000000;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int layout_anchor=0x00000000;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static int layout_anchorGravity=0x00000000;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int layout_behavior=0x00000000;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static int layout_dodgeInsetEdges=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int layout_ignoreInsets=0x00000000;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static int layout_insetEdge=0x00000000;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int layout_keyline=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int minHeightDps=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int minWidthDps=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int name=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numColumns=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numFolderColumns=0x00000000;
    /**
     * numFolderRows & numFolderColumns defaults to numRows & numColumns, if not specified
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numFolderRows=0x00000000;
    /**
     * numHotseatIcons defaults to numColumns, if not specified
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numHotseatIcons=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numMinColumns=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numMinRows=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numRows=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int packageName=0x00000000;
    /**
     * The page indicator for this workspace
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int pageIndicator=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int popupColorPrimary=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int popupColorSecondary=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int popupColorTertiary=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int providerId=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int reverseLayout=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int screen=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int spanCount=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int spanX=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int spanY=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int stackFromEnd=0x00000000;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int statusBarBackground=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int title=0x00000000;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int ttcIndex=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int uri=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int value=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int widgetsTheme=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int workspace=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int workspaceAmbientShadowColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int workspaceKeyShadowColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int workspaceShadowColor=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int workspaceStatusBarScrim=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int workspaceTextColor=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int x=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int y=0x00000000;
  }
  public static final class bool {
    public static int allow_rotation=0x00000000;
    /**
     * Miscellaneous
     */
    public static int config_largeHeap=0x00000000;
    public static int enable_install_shortcut_api=0x00000000;
    /**
     * Hotseat
     * Hotseat
     */
    public static int hotseat_transpose_layout_with_orientation=0x00000000;
    public static int is_large_tablet=0x00000000;
    public static int is_tablet=0x00000000;
    public static int notification_badging_enabled=0x00000000;
  }
  public static final class color {
    public static int all_apps_bg_hand_fill=0x00000000;
    public static int all_apps_bg_hand_fill_dark=0x00000000;
    public static int all_apps_tab_text=0x00000000;
    public static int default_shadow_color_no_alpha=0x00000000;
    /**
     * The color tints to apply to the text and drag view when hovering
     * over the delete target or the info target
     */
    public static int delete_target_hover_tint=0x00000000;
    public static int focused_background=0x00000000;
    /**
     * Gray 600
     */
    public static int icon_background=0x00000000;
    /**
     * Gray 300
     */
    public static int legacy_icon_background=0x00000000;
    public static int notification_action_color_filter=0x00000000;
    public static int notification_icon_bg_color=0x00000000;
    /**
     * Popup container
     */
    public static int notification_icon_default_color=0x00000000;
    public static int notification_material_background_media_default_color=0x00000000;
    public static int primary_text_default_material_dark=0x00000000;
    public static int ripple_material_light=0x00000000;
    public static int secondary_text_default_material_dark=0x00000000;
    public static int secondary_text_default_material_light=0x00000000;
    public static int spring_loaded_highlighted_panel_border_color=0x00000000;
    public static int spring_loaded_panel_color=0x00000000;
    public static int uninstall_target_hover_tint=0x00000000;
  }
  public static final class dimen {
    public static int all_apps_background_canvas_height=0x00000000;
    /**
     * All Apps
     */
    public static int all_apps_background_canvas_width=0x00000000;
    /**
     * All Apps
     * All Apps
     */
    public static int all_apps_button_scale_down=0x00000000;
    public static int all_apps_divider_height=0x00000000;
    public static int all_apps_divider_margin_vertical=0x00000000;
    public static int all_apps_empty_search_bg_top_offset=0x00000000;
    public static int all_apps_empty_search_message_top_offset=0x00000000;
    /**
     * Search bar in All Apps
     */
    public static int all_apps_header_max_elevation=0x00000000;
    public static int all_apps_header_scroll_to_elevation=0x00000000;
    public static int all_apps_header_shadow_height=0x00000000;
    public static int all_apps_header_tab_height=0x00000000;
    public static int all_apps_header_top_padding=0x00000000;
    public static int all_apps_scrim_blur=0x00000000;
    public static int all_apps_scrim_margin=0x00000000;
    /**
     * Hotseat/all-apps scrim
     */
    public static int all_apps_scrim_radius=0x00000000;
    public static int all_apps_search_bar_bottom_padding=0x00000000;
    public static int all_apps_search_bar_field_height=0x00000000;
    public static int all_apps_tabs_indicator_height=0x00000000;
    public static int all_apps_tabs_side_padding=0x00000000;
    public static int all_apps_work_profile_tab_footer_bottom_padding=0x00000000;
    public static int all_apps_work_profile_tab_footer_top_padding=0x00000000;
    public static int bg_popup_item_condensed_height=0x00000000;
    public static int bg_popup_item_height=0x00000000;
    public static int bg_popup_item_width=0x00000000;
    /**
     * Notifications
     */
    public static int bg_round_rect_radius=0x00000000;
    public static int blur_size_click_shadow=0x00000000;
    public static int blur_size_medium_outline=0x00000000;
    /**
     * Shadows and outlines
     */
    public static int blur_size_thin_outline=0x00000000;
    public static int click_shadow_elevation=0x00000000;
    public static int click_shadow_high_shift=0x00000000;
    public static int closing_window_trans_y=0x00000000;
    public static int compat_button_inset_horizontal_material=0x00000000;
    public static int compat_button_inset_vertical_material=0x00000000;
    public static int compat_button_padding_horizontal_material=0x00000000;
    public static int compat_button_padding_vertical_material=0x00000000;
    public static int compat_control_corner_material=0x00000000;
    public static int compat_notification_large_icon_max_height=0x00000000;
    public static int compat_notification_large_icon_max_width=0x00000000;
    /**
     * Launcher app transition
     */
    public static int content_trans_y=0x00000000;
    public static int deep_shortcut_drag_handle_size=0x00000000;
    public static int deep_shortcut_drawable_padding=0x00000000;
    public static int deep_shortcut_icon_size=0x00000000;
    /**
     * popup_item_width - deep_shortcuts_text_padding_start
     */
    public static int deep_shortcuts_divider_width=0x00000000;
    /**
     * Deep shortcuts
     */
    public static int deep_shortcuts_elevation=0x00000000;
    /**
     * an icon with shortcuts must be dragged this far before the container is removed.
     */
    public static int deep_shortcuts_start_drag_threshold=0x00000000;
    /**
     * popup_padding_start + icon_size + 10dp
     */
    public static int deep_shortcuts_text_padding_start=0x00000000;
    /**
     * the distance an icon must be dragged before button drop targets accept it
     */
    public static int drag_distanceThreshold=0x00000000;
    /**
     * Elevation for the drag view. It should be larger than elevation of all other drag sources
     * and drop targets like all-apps and folders
     */
    public static int drag_elevation=0x00000000;
    /**
     * DragController
     */
    public static int drag_flingToDeleteMinVelocity=0x00000000;
    /**
     * Drag padding to add to the bottom of drop targets
     * Drag padding to add to the bottom of drop targets
     */
    public static int drop_target_drag_padding=0x00000000;
    public static int drop_target_shadow_elevation=0x00000000;
    public static int drop_target_text_size=0x00000000;
    public static int drop_target_vertical_gap=0x00000000;
    public static int dynamic_grid_cell_layout_bottom_padding=0x00000000;
    public static int dynamic_grid_cell_layout_padding=0x00000000;
    public static int dynamic_grid_cell_padding_x=0x00000000;
    /**
     * Drop target bar
     */
    public static int dynamic_grid_drop_target_size=0x00000000;
    /**
     * Dynamic Grid
     */
    public static int dynamic_grid_edge_margin=0x00000000;
    /**
     * Extra bottom padding for non-tall devices.
     */
    public static int dynamic_grid_hotseat_bottom_non_tall_padding=0x00000000;
    public static int dynamic_grid_hotseat_bottom_padding=0x00000000;
    public static int dynamic_grid_hotseat_side_padding=0x00000000;
    /**
     * Will be set to equal the hotseat icon size.
     */
    public static int dynamic_grid_hotseat_size=0x00000000;
    /**
     * Hotseat
     */
    public static int dynamic_grid_hotseat_top_padding=0x00000000;
    /**
     * Dynamic grid
     */
    public static int dynamic_grid_icon_drawable_padding=0x00000000;
    /**
     * Minimum space between workspace and hotseat in spring loaded mode
     */
    public static int dynamic_grid_min_spring_loaded_space=0x00000000;
    public static int dynamic_grid_page_indicator_line_height=0x00000000;
    public static int dynamic_grid_workspace_page_spacing=0x00000000;
    public static int dynamic_grid_workspace_top_padding=0x00000000;
    public static int fastscroll_default_thickness=0x00000000;
    public static int fastscroll_end_margin=0x00000000;
    public static int fastscroll_margin=0x00000000;
    public static int fastscroll_minimum_range=0x00000000;
    public static int fastscroll_popup_height=0x00000000;
    public static int fastscroll_popup_margin=0x00000000;
    public static int fastscroll_popup_padding=0x00000000;
    public static int fastscroll_popup_text_size=0x00000000;
    /**
     * Fast scroll
     * Fast scroll
     */
    public static int fastscroll_popup_width=0x00000000;
    public static int fastscroll_thumb_height=0x00000000;
    public static int fastscroll_thumb_padding=0x00000000;
    public static int fastscroll_thumb_touch_inset=0x00000000;
    public static int fastscroll_track_max_width=0x00000000;
    /**
     * Fast scroll
     */
    public static int fastscroll_track_min_width=0x00000000;
    /**
     * Fast scroller draws the content horizontally centered. The end of the track should be
     * aligned at the end of the container.
     * fastscroll_end_margin = - (fastscroll_width - fastscroll_track_min_width) / 2
     */
    public static int fastscroll_width=0x00000000;
    public static int folder_cell_x_padding=0x00000000;
    public static int folder_cell_y_padding=0x00000000;
    public static int folder_child_text_size=0x00000000;
    public static int folder_label_padding_bottom=0x00000000;
    public static int folder_label_padding_top=0x00000000;
    public static int folder_label_text_size=0x00000000;
    /**
     * arrow_horizontal_offset_start - (ellipsis_size - arrow_width) / 2
     */
    public static int horizontal_ellipsis_offset=0x00000000;
    public static int horizontal_ellipsis_size=0x00000000;
    public static int item_touch_helper_max_drag_scroll_per_frame=0x00000000;
    public static int item_touch_helper_swipe_escape_max_velocity=0x00000000;
    public static int item_touch_helper_swipe_escape_velocity=0x00000000;
    public static int landscape_task_card_horz_space=0x00000000;
    public static int multi_window_task_card_horz_space=0x00000000;
    /**
     * Copied from framework resource:
     * docked_stack_divider_thickness - 2 * docked_stack_divider_insets
     */
    public static int multi_window_task_divider_size=0x00000000;
    public static int notification_action_icon_size=0x00000000;
    public static int notification_action_text_size=0x00000000;
    public static int notification_big_circle_margin=0x00000000;
    public static int notification_content_margin_start=0x00000000;
    /**
     * How much space to keep as padding for the last notification when the footer collapses
     */
    public static int notification_empty_footer_height=0x00000000;
    public static int notification_footer_height=0x00000000;
    /**
     * notification_padding_end + (icon_size - footer_icon_size) / 2
     */
    public static int notification_footer_icon_row_padding=0x00000000;
    public static int notification_footer_icon_size=0x00000000;
    public static int notification_header_count_text_size=0x00000000;
    public static int notification_header_height=0x00000000;
    public static int notification_header_text_size=0x00000000;
    public static int notification_icon_size=0x00000000;
    public static int notification_large_icon_height=0x00000000;
    public static int notification_large_icon_width=0x00000000;
    public static int notification_main_column_padding_top=0x00000000;
    public static int notification_main_height=0x00000000;
    /**
     * notification_icon_size + notification_padding_end + 16dp padding between icon and text
     */
    public static int notification_main_text_padding_end=0x00000000;
    public static int notification_main_text_size=0x00000000;
    public static int notification_main_title_size=0x00000000;
    public static int notification_media_narrow_margin=0x00000000;
    public static int notification_padding_end=0x00000000;
    public static int notification_padding_start=0x00000000;
    public static int notification_right_icon_size=0x00000000;
    public static int notification_right_side_padding_top=0x00000000;
    public static int notification_small_icon_background_padding=0x00000000;
    public static int notification_small_icon_size_as_large=0x00000000;
    public static int notification_subtext_size=0x00000000;
    public static int notification_top_pad=0x00000000;
    public static int notification_top_pad_large_text=0x00000000;
    /**
     * Overview
     */
    public static int options_menu_icon_size=0x00000000;
    public static int options_menu_thumb_size=0x00000000;
    /**
     * Folders
     */
    public static int page_indicator_dot_size=0x00000000;
    public static int pending_widget_elevation=0x00000000;
    /**
     * Pending widget
     */
    public static int pending_widget_min_padding=0x00000000;
    public static int popup_arrow_corner_radius=0x00000000;
    public static int popup_arrow_height=0x00000000;
    /**
     * popup_padding_end + deep_shortcut_drag_handle_size / 2
     */
    public static int popup_arrow_horizontal_center_end=0x00000000;
    /**
     * popup_padding_start + deep_shortcut_icon_size / 2
     */
    public static int popup_arrow_horizontal_center_start=0x00000000;
    public static int popup_arrow_vertical_offset=0x00000000;
    public static int popup_arrow_width=0x00000000;
    public static int popup_item_divider_height=0x00000000;
    public static int popup_padding_end=0x00000000;
    public static int popup_padding_start=0x00000000;
    public static int popup_vertical_padding=0x00000000;
    public static int portrait_task_card_horz_space=0x00000000;
    public static int pre_drag_view_scale=0x00000000;
    public static int profile_badge_margin=0x00000000;
    public static int profile_badge_minimum_top=0x00000000;
    /**
     * Sizes for managed profile badges
     */
    public static int profile_badge_size=0x00000000;
    public static int quickscrub_adjacent_visible_width=0x00000000;
    public static int quickstep_fling_min_velocity=0x00000000;
    public static int quickstep_fling_threshold_velocity=0x00000000;
    public static int recents_clear_all_deadzone_vertical_margin=0x00000000;
    public static int recents_empty_message_text_padding=0x00000000;
    public static int recents_empty_message_text_size=0x00000000;
    /**
     * The speed in dp/s at which the user needs to be scrolling in recents such that we start
     * loading full resolution screenshots.
     */
    public static int recents_fast_fling_velocity=0x00000000;
    public static int recents_page_spacing=0x00000000;
    public static int resize_frame_background_padding=0x00000000;
    /**
     * same as vertical_drag_handle_size
     */
    public static int shelf_surface_offset=0x00000000;
    public static int shelf_surface_radius=0x00000000;
    /**
     * Padding applied to shortcut previews
     */
    public static int shortcut_preview_padding_left=0x00000000;
    public static int shortcut_preview_padding_right=0x00000000;
    public static int shortcut_preview_padding_top=0x00000000;
    public static int spring_loaded_panel_border=0x00000000;
    public static int subtitle_corner_radius=0x00000000;
    public static int subtitle_outline_width=0x00000000;
    public static int subtitle_shadow_offset=0x00000000;
    public static int subtitle_shadow_radius=0x00000000;
    public static int swipe_helper_falsing_threshold=0x00000000;
    public static int system_shortcut_header_height=0x00000000;
    /**
     * (touch_size - icon_size) / 2
     */
    public static int system_shortcut_header_icon_padding=0x00000000;
    public static int system_shortcut_header_icon_touch_size=0x00000000;
    public static int system_shortcut_icon_size=0x00000000;
    /**
     * popup_arrow_center_start - system_shortcut_icon_size / 2
     */
    public static int system_shortcut_margin_start=0x00000000;
    public static int task_card_menu_horizontal_padding=0x00000000;
    public static int task_card_menu_option_vertical_padding=0x00000000;
    public static int task_card_menu_shadow_height=0x00000000;
    /**
     * Total space (start + end) between the task card and the edge of the screen
     * in various configurations
     */
    public static int task_card_vert_space=0x00000000;
    public static int task_corner_radius=0x00000000;
    public static int task_thumbnail_half_top_margin=0x00000000;
    public static int task_thumbnail_icon_size=0x00000000;
    public static int task_thumbnail_top_margin=0x00000000;
    public static int vertical_drag_handle_overlap_workspace=0x00000000;
    public static int vertical_drag_handle_size=0x00000000;
    /**
     * App Widget resize frame
     */
    public static int widget_handle_margin=0x00000000;
    public static int widget_preview_cell_divider_width=0x00000000;
    public static int widget_preview_corner_radius=0x00000000;
    public static int widget_preview_key_shadow_distance=0x00000000;
    public static int widget_preview_label_horizontal_padding=0x00000000;
    /**
     * Widget tray
     */
    public static int widget_preview_label_vertical_padding=0x00000000;
    public static int widget_preview_shadow_blur=0x00000000;
    public static int widget_preview_shortcut_padding=0x00000000;
    public static int widget_row_divider=0x00000000;
    public static int widget_row_padding=0x00000000;
    public static int widget_section_height=0x00000000;
    public static int widget_section_horizontal_padding=0x00000000;
    public static int widget_section_icon_size=0x00000000;
    /**
     * Widget tray
     */
    public static int widget_section_indent=0x00000000;
    public static int widget_section_vertical_padding=0x00000000;
    public static int workspace_trans_y=0x00000000;
  }
  public static final class drawable {
    public static int adaptive_icon_drawable_wrapper=0x00000000;
    public static int all_apps_button_icon=0x00000000;
    public static int all_apps_divider=0x00000000;
    public static int all_apps_search_hint=0x00000000;
    public static int bg_all_apps_searchbox=0x00000000;
    public static int bg_celllayout=0x00000000;
    public static int bg_deferred_app_widget=0x00000000;
    public static int bg_notification_content=0x00000000;
    public static int bg_workspace_card_button=0x00000000;
    public static int deep_shortcuts_drag_handle=0x00000000;
    public static int drag_handle_indicator=0x00000000;
    public static int gutter_horizontal=0x00000000;
    public static int horizontal_ellipsis=0x00000000;
    public static int ic_all_apps_bg_hand=0x00000000;
    public static int ic_all_apps_bg_icon_1=0x00000000;
    public static int ic_all_apps_bg_icon_2=0x00000000;
    public static int ic_all_apps_bg_icon_3=0x00000000;
    public static int ic_all_apps_bg_icon_4=0x00000000;
    public static int ic_allapps=0x00000000;
    public static int ic_allapps_pressed=0x00000000;
    public static int ic_allapps_search=0x00000000;
    public static int ic_close=0x00000000;
    public static int ic_corp=0x00000000;
    public static int ic_empty_recents=0x00000000;
    public static int ic_info_no_shadow=0x00000000;
    public static int ic_install_no_shadow=0x00000000;
    public static int ic_instant_app_badge=0x00000000;
    public static int ic_launcher_home=0x00000000;
    public static int ic_pin=0x00000000;
    public static int ic_remove_no_shadow=0x00000000;
    public static int ic_remove_shadow=0x00000000;
    public static int ic_setting=0x00000000;
    public static int ic_setup_shadow=0x00000000;
    public static int ic_split_screen=0x00000000;
    public static int ic_uninstall_no_shadow=0x00000000;
    public static int ic_uninstall_shadow=0x00000000;
    public static int ic_wallpaper=0x00000000;
    public static int ic_warning=0x00000000;
    public static int ic_widget=0x00000000;
    public static int ic_widget_resize_handle=0x00000000;
    public static int notification_action_background=0x00000000;
    public static int notification_bg=0x00000000;
    public static int notification_bg_low=0x00000000;
    public static int notification_bg_low_normal=0x00000000;
    public static int notification_bg_low_pressed=0x00000000;
    public static int notification_bg_normal=0x00000000;
    public static int notification_bg_normal_pressed=0x00000000;
    public static int notification_icon_background=0x00000000;
    public static int notification_template_icon_bg=0x00000000;
    public static int notification_template_icon_low_bg=0x00000000;
    public static int notification_tile_bg=0x00000000;
    public static int notify_panel_notification_icon_bg=0x00000000;
    public static int pending_widget_bg=0x00000000;
    public static int round_rect_primary=0x00000000;
    public static int task_menu_bg=0x00000000;
    public static int tooltip_frame=0x00000000;
    public static int top_round_rect_primary=0x00000000;
    public static int widget_internal_focus_bg=0x00000000;
    public static int widget_resize_frame=0x00000000;
    public static int widget_resize_shadow=0x00000000;
    public static int work_tab_user_education=0x00000000;
    public static int workspace_bg=0x00000000;
  }
  public static final class fraction {
    /**
     * Container
     */
    public static int container_margin=0x00000000;
  }
  public static final class id {
    public static int action0=0x00000000;
    public static int action_add_to_workspace=0x00000000;
    public static int action_container=0x00000000;
    public static int action_deep_shortcuts=0x00000000;
    public static int action_dismiss_notification=0x00000000;
    public static int action_divider=0x00000000;
    public static int action_image=0x00000000;
    public static int action_move=0x00000000;
    public static int action_move_screen_backwards=0x00000000;
    public static int action_move_screen_forwards=0x00000000;
    public static int action_move_to_workspace=0x00000000;
    public static int action_reconfigure=0x00000000;
    /**
     * Accessibility actions
     */
    public static int action_remove=0x00000000;
    public static int action_resize=0x00000000;
    public static int action_shortcuts_and_notifications=0x00000000;
    public static int action_text=0x00000000;
    public static int action_uninstall=0x00000000;
    public static int actions=0x00000000;
    public static int all=0x00000000;
    public static int all_apps=0x00000000;
    public static int all_apps_header=0x00000000;
    public static int all_apps_tabs_view_pager=0x00000000;
    public static int apps_list_view=0x00000000;
    public static int apps_view=0x00000000;
    public static int async=0x00000000;
    public static int blocking=0x00000000;
    public static int bottom=0x00000000;
    public static int btn_qsb_search=0x00000000;
    public static int btn_qsb_setup=0x00000000;
    public static int bubble_text=0x00000000;
    public static int cancel_action=0x00000000;
    /**
     * View ID used by cell layout to jail its content
     */
    public static int cell_layout_jail_id=0x00000000;
    public static int center=0x00000000;
    public static int center_horizontal=0x00000000;
    public static int center_vertical=0x00000000;
    public static int chronometer=0x00000000;
    public static int clip_horizontal=0x00000000;
    public static int clip_vertical=0x00000000;
    public static int close_bottom_user_tip=0x00000000;
    public static int container=0x00000000;
    public static int deep_shortcuts_container=0x00000000;
    public static int delete_target_text=0x00000000;
    public static int divider=0x00000000;
    /**
     * DragController
     */
    public static int drag_event_parity=0x00000000;
    public static int drag_layer=0x00000000;
    public static int drop_target_bar=0x00000000;
    public static int empty_text=0x00000000;
    public static int end=0x00000000;
    public static int end_padder=0x00000000;
    public static int fast_scroller=0x00000000;
    public static int fast_scroller_popup=0x00000000;
    public static int fill=0x00000000;
    public static int fill_horizontal=0x00000000;
    public static int fill_vertical=0x00000000;
    public static int folder=0x00000000;
    public static int folder_content=0x00000000;
    public static int folder_footer=0x00000000;
    public static int folder_icon_name=0x00000000;
    public static int folder_name=0x00000000;
    public static int folder_page_indicator=0x00000000;
    public static int footer=0x00000000;
    public static int forever=0x00000000;
    public static int header=0x00000000;
    public static int hotseat=0x00000000;
    public static int icon=0x00000000;
    public static int icon_group=0x00000000;
    public static int icon_row=0x00000000;
    public static int info=0x00000000;
    public static int italic=0x00000000;
    public static int item_touch_helper_previous_elevation=0x00000000;
    public static int launcher=0x00000000;
    public static int layout=0x00000000;
    public static int left=0x00000000;
    public static int line1=0x00000000;
    public static int line3=0x00000000;
    public static int main_view=0x00000000;
    public static int managed_by_label=0x00000000;
    public static int media_actions=0x00000000;
    public static int menu_option_layout=0x00000000;
    public static int none=0x00000000;
    public static int normal=0x00000000;
    public static int notification_background=0x00000000;
    public static int notification_count=0x00000000;
    public static int notification_main_column=0x00000000;
    public static int notification_main_column_container=0x00000000;
    public static int notification_text=0x00000000;
    public static int overflow=0x00000000;
    public static int overview_panel=0x00000000;
    public static int page_indicator=0x00000000;
    public static int popup_item_icon=0x00000000;
    /**
     * View ID to use for QSB widget
     */
    public static int qsb_widget=0x00000000;
    public static int right=0x00000000;
    public static int right_icon=0x00000000;
    public static int right_side=0x00000000;
    public static int scrim_view=0x00000000;
    public static int search_container_all_apps=0x00000000;
    public static int search_container_hotseat=0x00000000;
    /**
     * QSB IDs. DO not change
     */
    public static int search_container_workspace=0x00000000;
    public static int search_market_text=0x00000000;
    public static int section=0x00000000;
    public static int shortcut_popup=0x00000000;
    public static int snapshot=0x00000000;
    /**
     * View tag key used to store SpringAnimation data.
     */
    public static int spring_animation_tag=0x00000000;
    public static int start=0x00000000;
    public static int status_bar_latest_event_content=0x00000000;
    public static int system_shortcut_icons=0x00000000;
    public static int tab_personal=0x00000000;
    public static int tab_work=0x00000000;
    public static int tabs=0x00000000;
    public static int tag_transition_group=0x00000000;
    public static int tag_unhandled_key_event_manager=0x00000000;
    public static int tag_unhandled_key_listeners=0x00000000;
    public static int task_icon_and_name=0x00000000;
    public static int text=0x00000000;
    public static int text2=0x00000000;
    public static int text_and_background=0x00000000;
    public static int time=0x00000000;
    public static int title=0x00000000;
    public static int top=0x00000000;
    public static int uninstall_target_text=0x00000000;
    public static int view_highlighted=0x00000000;
    /**
     * Tag id used for view scrim
     */
    public static int view_scrim=0x00000000;
    /**
     * View IDs to store item highlight information
     */
    public static int view_unhighlight_background=0x00000000;
    public static int widget_cell=0x00000000;
    public static int widget_dims=0x00000000;
    public static int widget_name=0x00000000;
    public static int widget_preview=0x00000000;
    public static int widget_section=0x00000000;
    public static int widgets=0x00000000;
    public static int widgets_cell_list=0x00000000;
    public static int widgets_cell_list_container=0x00000000;
    public static int widgets_list_view=0x00000000;
    public static int widgets_scroll_container=0x00000000;
    public static int work_footer_divider=0x00000000;
    public static int work_mode_toggle=0x00000000;
    public static int workspace=0x00000000;
    public static int workspace_page_container=0x00000000;
  }
  public static final class integer {
    public static int cancel_button_image_alpha=0x00000000;
    /**
     * The duration of the caret animation
     */
    public static int config_caretAnimationDuration=0x00000000;
    /**
     * The duration (in ms) of the fade animation on the object outlines, used when
     * we are dragging objects around on the home screen.
     */
    public static int config_dragOutlineFadeTime=0x00000000;
    /**
     * The alpha value at which to show the most recent drop visualization outline.
     */
    public static int config_dragOutlineMaxAlpha=0x00000000;
    /**
     * The distance at which the animation should take the max duration
     */
    public static int config_dropAnimMaxDist=0x00000000;
    public static int config_dropAnimMaxDuration=0x00000000;
    /**
     * Parameters controlling the animation for when an item is dropped on the home screen,
     * and it animates from its old position to the new one.
     */
    public static int config_dropAnimMinDuration=0x00000000;
    public static int config_folderDelay=0x00000000;
    /**
     * The duration of the UserFolder opening and closing animation
     */
    public static int config_materialFolderExpandDuration=0x00000000;
    public static int config_popupArrowOpenDuration=0x00000000;
    /**
     * Popup items
     */
    public static int config_popupOpenCloseDuration=0x00000000;
    public static int config_recentsMaxIconCacheSize=0x00000000;
    public static int config_recentsMaxThumbnailCacheSize=0x00000000;
    public static int config_removeNotificationViewDuration=0x00000000;
    /**
     * The duration of the animation from search hint to text entry
     */
    public static int config_searchHintAnimationDuration=0x00000000;
    /**
     * Out of 100, the percent to shrink the workspace during spring loaded mode.
     */
    public static int config_workspaceSpringLoadShrinkPercentage=0x00000000;
    public static int extracted_color_gradient_alpha=0x00000000;
    public static int status_bar_notification_info_maxnum=0x00000000;
  }
  public static final class interpolator {
    public static int decelerate_quart=0x00000000;
    public static int decelerate_quint=0x00000000;
    public static int disco_bounce=0x00000000;
    public static int folder_interpolator=0x00000000;
    public static int large_folder_preview_item_close_interpolator=0x00000000;
    public static int large_folder_preview_item_open_interpolator=0x00000000;
  }
  public static final class layout {
    public static int add_item_confirmation_activity=0x00000000;
    public static int all_apps=0x00000000;
    public static int all_apps_button=0x00000000;
    public static int all_apps_divider=0x00000000;
    public static int all_apps_empty_search=0x00000000;
    public static int all_apps_fast_scroller=0x00000000;
    public static int all_apps_floating_header=0x00000000;
    public static int all_apps_icon=0x00000000;
    public static int all_apps_rv_layout=0x00000000;
    public static int all_apps_search_market=0x00000000;
    public static int all_apps_tabs=0x00000000;
    public static int app_icon=0x00000000;
    public static int app_widget_resize_frame=0x00000000;
    public static int appwidget_error=0x00000000;
    public static int appwidget_not_ready=0x00000000;
    public static int deep_shortcut=0x00000000;
    public static int drop_target_bar=0x00000000;
    public static int drop_target_tool_tip=0x00000000;
    public static int fallback_recents_activity=0x00000000;
    public static int folder_application=0x00000000;
    public static int folder_icon=0x00000000;
    public static int folder_page=0x00000000;
    public static int hotseat=0x00000000;
    public static int launcher=0x00000000;
    public static int longpress_options_menu=0x00000000;
    public static int notification_action=0x00000000;
    public static int notification_action_tombstone=0x00000000;
    public static int notification_content=0x00000000;
    public static int notification_gutter=0x00000000;
    public static int notification_media_action=0x00000000;
    public static int notification_media_cancel_action=0x00000000;
    public static int notification_pref_warning=0x00000000;
    public static int notification_template_big_media=0x00000000;
    public static int notification_template_big_media_custom=0x00000000;
    public static int notification_template_big_media_narrow=0x00000000;
    public static int notification_template_big_media_narrow_custom=0x00000000;
    public static int notification_template_custom_big=0x00000000;
    public static int notification_template_icon_group=0x00000000;
    public static int notification_template_lines_media=0x00000000;
    public static int notification_template_media=0x00000000;
    public static int notification_template_media_custom=0x00000000;
    public static int notification_template_part_chronometer=0x00000000;
    public static int notification_template_part_time=0x00000000;
    public static int overview_clear_all_button=0x00000000;
    public static int overview_panel=0x00000000;
    public static int popup_container=0x00000000;
    public static int qsb_default_view=0x00000000;
    public static int scrim_view=0x00000000;
    public static int search_container_all_apps=0x00000000;
    public static int search_container_workspace=0x00000000;
    public static int system_shortcut=0x00000000;
    public static int system_shortcut_icon_only=0x00000000;
    public static int system_shortcut_icons=0x00000000;
    public static int task=0x00000000;
    public static int task_menu=0x00000000;
    public static int task_view_menu_option=0x00000000;
    public static int user_folder_icon_normalized=0x00000000;
    public static int widget_cell=0x00000000;
    public static int widget_cell_content=0x00000000;
    public static int widget_list_divider=0x00000000;
    public static int widgets_bottom_sheet=0x00000000;
    public static int widgets_full_sheet=0x00000000;
    public static int widgets_list_row_view=0x00000000;
    public static int widgets_scroll_container=0x00000000;
    public static int work_tab_bottom_user_education_view=0x00000000;
    public static int work_tab_footer=0x00000000;
    public static int workspace_screen=0x00000000;
  }
  public static final class mipmap {
    public static int ic_launcher_home=0x00000000;
    public static int ic_launcher_home_foreground=0x00000000;
  }
  public static final class plurals {
    /**
     * The format string for when an app has a notification dot (meaning it has associated notifications).
     */
    public static int badged_app_label=0x00000000;
  }
  public static final class raw {
    public static int downgrade_schema=0x00000000;
  }
  public static final class string {
    /**
     * Button for abandoned promises dialog, to removes this abandoned promise icon.
     */
    public static int abandoned_clean_this=0x00000000;
    /**
     * Explanation for abandoned promise dialog. "The first 'it' refers to the shortcut icon.
     * The second "it" refers to the app.
     */
    public static int abandoned_promise_explanation=0x00000000;
    /**
     * Title for abandoned promise dialog.
     */
    public static int abandoned_promises_title=0x00000000;
    /**
     * Button for abandoned promise dialog, to search in the market for the missing package.
     */
    public static int abandoned_search=0x00000000;
    /**
     * Content description for the recent apps's accessibility option that closes it. [CHAR LIMIT=NONE]
     */
    public static int accessibility_close_task=0x00000000;
    /**
     * Content description for the recent apps panel (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static int accessibility_desc_recent_apps=0x00000000;
    /**
     * Accessibility title for the list of recent apps [CHAR_LIMIT=none]
     */
    public static int accessibility_recent_apps=0x00000000;
    /**
     * Accessibility action to add an app to workspace. [CHAR_LIMIT=30]
     */
    public static int action_add_to_workspace=0x00000000;
    /**
     * Accessibility action to decrease height of a widget. [CHAR_LIMIT=30]
     */
    public static int action_decrease_height=0x00000000;
    /**
     * Accessibility action to decrease width of a widget. [CHAR_LIMIT=30]
     */
    public static int action_decrease_width=0x00000000;
    /**
     * Accessibility action to show quick actions menu for an icon. [CHAR_LIMIT=30]
     */
    public static int action_deep_shortcut=0x00000000;
    /**
     * Accessibility action to dismiss a notification in the shortcuts menu for an icon. [CHAR_LIMIT=30]
     */
    public static int action_dismiss_notification=0x00000000;
    /**
     * Accessibility action to increase height of a widget. [CHAR_LIMIT=30]
     */
    public static int action_increase_height=0x00000000;
    /**
     * Accessibility action to increase width of a widget. [CHAR_LIMIT=30]
     */
    public static int action_increase_width=0x00000000;
    /**
     * Accessibility action to move an item on the workspace. [CHAR_LIMIT=30]
     */
    public static int action_move=0x00000000;
    /**
     * Accessibility action to move item to the current location. [CHAR_LIMIT=30]
     */
    public static int action_move_here=0x00000000;
    /**
     * Accessibility action to move an item from folder to workspace. [CHAR_LIMIT=30]
     */
    public static int action_move_to_workspace=0x00000000;
    /**
     * Accessibility action to resize a widget. [CHAR_LIMIT=30]
     */
    public static int action_resize=0x00000000;
    /**
     * Displayed when user selects a shortcut for an app that is current not available [CHAR_LIMIT=none]
     */
    public static int activity_not_available=0x00000000;
    /**
     * Displayed when user selects a shortcut for an app that was uninstalled [CHAR_LIMIT=none]
     */
    public static int activity_not_found=0x00000000;
    /**
     * Message to tell the user to press and hold a widget/icon to add it
     */
    public static int add_item_request_drag_hint=0x00000000;
    /**
     * Accessibility description to move item into an existing folder.
     */
    public static int add_to_folder=0x00000000;
    /**
     * Accessibility description to move item into an existing folder containing an app.
     */
    public static int add_to_folder_with_app=0x00000000;
    /**
     * Accessibility confirmation for item added to folder.
     */
    public static int added_to_folder=0x00000000;
    /**
     * All applications label
     */
    public static int all_apps_button_label=0x00000000;
    public static int all_apps_button_personal_label=0x00000000;
    public static int all_apps_button_work_label=0x00000000;
    /**
     * Label for button in all applications label to go back home (to the workspace / desktop)
     * for accessibilty (spoken when the button gets focus).
     */
    public static int all_apps_home_button_label=0x00000000;
    /**
     * Loading apps text. [CHAR_LIMIT=50]
     */
    public static int all_apps_loading_message=0x00000000;
    /**
     * No-search-results text. [CHAR_LIMIT=50]
     */
    public static int all_apps_no_search_results=0x00000000;
    /**
     * Label of tab to indicate personal apps
     */
    public static int all_apps_personal_tab=0x00000000;
    /**
     * Search bar text in the apps view. [CHAR_LIMIT=50]
     */
    public static int all_apps_search_bar_hint=0x00000000;
    /**
     * Label for the button which allows the user to get app search results. [CHAR_LIMIT=50]
     */
    public static int all_apps_search_market_message=0x00000000;
    /**
     * Label of tab to indicate work apps
     */
    public static int all_apps_work_tab=0x00000000;
    /**
     * Text explaining when the home screen will get rotated. [CHAR LIMIT=100]
     */
    public static int allow_rotation_desc=0x00000000;
    /**
     * Title for Allow Rotation setting. [CHAR LIMIT=50]
     */
    public static int allow_rotation_title=0x00000000;
    /**
     * Title for an app which is being downloaded.
     */
    public static int app_downloading_title=0x00000000;
    /**
     * Name of a subclass of com.android.launcher3.AppFilter used to
     * filter the activities shown in the launcher. Can be empty.
     */
    public static int app_filter_class=0x00000000;
    /**
     * Label for app info drop target. [CHAR_LIMIT=20]
     */
    public static int app_info_drop_target_label=0x00000000;
    /**
     * Application name
     */
    public static int app_name=0x00000000;
    /**
     * Name of an app transition manager class.
     */
    public static int app_transition_manager_class=0x00000000;
    /**
     * Title for an app whose download has been started.
     */
    public static int app_waiting_download_title=0x00000000;
    /**
     * Text description of the setting that allows the automatic placement of launcher shortcuts for applications and games installed on the device [CHAR LIMIT=NONE]
     */
    public static int auto_add_shortcuts_description=0x00000000;
    /**
     * Label for the setting that allows the automatic placement of launcher shortcuts for applications and games installed on the device [CHAR LIMIT=40]
     */
    public static int auto_add_shortcuts_label=0x00000000;
    /**
     * Text in an overlay in All Apps. This overlay is letting a user know about their work profile, which is managed by their employer.
     */
    public static int bottom_work_tab_user_education_body=0x00000000;
    public static int bottom_work_tab_user_education_close_button=0x00000000;
    public static int bottom_work_tab_user_education_closed=0x00000000;
    /**
     * Title of an overlay in All Apps. This overlay is letting a user know about their work profile, which is managed by their employer. "Work apps" are apps in a user's work profile.
     */
    public static int bottom_work_tab_user_education_title=0x00000000;
    /**
     * Name of a color extraction implementation class.
     */
    public static int color_extraction_impl_class=0x00000000;
    /**
     * Accessibility description to create folder with another item.
     */
    public static int create_folder_with=0x00000000;
    /**
     * Label for showing custom action list of a shortcut or widget. [CHAR_LIMIT=30]
     */
    public static int custom_actions=0x00000000;
    /**
     * The format string for default page scroll text [CHAR_LIMIT=none]
     */
    public static int default_scroll_format=0x00000000;
    /**
     * String representing the intent to delete a package.
     */
    public static int delete_package_intent=0x00000000;
    /**
     * A string pointer to the original app name string. This allows derived projects to
     * easily override the app name without providing all translations
     */
    public static int derived_app_name=0x00000000;
    /**
     * The format string for when an app is temporarily disabled.
     */
    public static int disabled_app_label=0x00000000;
    /**
     * Name of a drawable factory class.
     */
    public static int drawable_factory_class=0x00000000;
    /**
     * Indication that folder closed
     */
    public static int folder_closed=0x00000000;
    /**
     * Accessibility confirmation for folder created.
     */
    public static int folder_created=0x00000000;
    /**
     * Default folder title
     */
    public static int folder_hint_text=0x00000000;
    /**
     * Default folder name
     */
    public static int folder_name=0x00000000;
    /**
     * Folder name format
     */
    public static int folder_name_format=0x00000000;
    /**
     * The format string for when a folder is opened, speaks the dimensions
     */
    public static int folder_opened=0x00000000;
    /**
     * Folder renamed format
     */
    public static int folder_renamed=0x00000000;
    /**
     * Instruction that clicking outside will close folder
     */
    public static int folder_tap_to_close=0x00000000;
    /**
     * Instruction that clicking outside will commit folder rename
     */
    public static int folder_tap_to_rename=0x00000000;
    /**
     * Text to show user in place of a gadget when we can't display it properly
     */
    public static int gadget_error_text=0x00000000;
    /**
     * Text to show user in place of a gadget when it is not yet initialized.
     */
    public static int gadget_setup_text=0x00000000;
    /**
     * User visible name for the launcher/home screen. [CHAR_LIMIT=30]
     */
    public static int home_screen=0x00000000;
    /**
     * Error message when user has filled the hotseat
     */
    public static int hotseat_out_of_space=0x00000000;
    /**
     * Text to indicate that the system icon badging setting is off [CHAR LIMIT=100]
     */
    public static int icon_badging_desc_off=0x00000000;
    /**
     * Text to indicate that the system icon badging setting is on [CHAR LIMIT=100]
     */
    public static int icon_badging_desc_on=0x00000000;
    /**
     * Summary for Notification dots setting. Tapping this will link enable/disable notification dots feature on the home screen. [CHAR LIMIT=50]
     */
    public static int icon_badging_service_title=0x00000000;
    /**
     * Title for Notification dots setting. Tapping this will link to the system Notifications settings screen where the user can turn off notification dots globally. [CHAR LIMIT=50]
     */
    public static int icon_badging_title=0x00000000;
    /**
     * Name of an icon provider class.
     */
    public static int icon_provider_class=0x00000000;
    /**
     * Option to change the shape of the home screen icons to a circle. [CHAR LIMIT=50]
     */
    public static int icon_shape_circle=0x00000000;
    /**
     * Developer setting to change the shape of icons on home screen. [CHAR LIMIT=50]
     */
    public static int icon_shape_override_label=0x00000000;
    /**
     * Subtext explaining that the icons will only be affected on the home screen. This text follows the actual icon action: Change icon shape, on Home screen [CHAR LIMIT=100]
     */
    public static int icon_shape_override_label_location=0x00000000;
    /**
     * Message shown in the progress dialog when the icon shape override is being applied [CHAR LIMIT=100]
     */
    public static int icon_shape_override_progress=0x00000000;
    /**
     * Option to change the shape of the home screen icons to a square. [CHAR LIMIT=50]
     */
    public static int icon_shape_square=0x00000000;
    /**
     * Option to change the shape of the home screen icons to a squircle. This represents the name of the shape somewhere between a circle and a square. [CHAR LIMIT=50]
     */
    public static int icon_shape_squircle=0x00000000;
    /**
     * Option to not change the icon shape on home screen and use the system default setting instead. [CHAR LIMIT=50]
     */
    public static int icon_shape_system_default=0x00000000;
    /**
     * Option to change the shape of the home screen icons to a teardrop. This represents the name of the shape similar to a circle with with the bottom right corner pushed out like a square [CHAR LIMIT=50]
     */
    public static int icon_shape_teardrop=0x00000000;
    /**
     * Label for install drop target. [CHAR_LIMIT=20]
     */
    public static int install_drop_target_label=0x00000000;
    /**
     * Name of a subclass of com.android.launcher3.util.InstantAppResolver. Can be empty.
     */
    public static int instant_app_resolver_class=0x00000000;
    /**
     * Accessibility confirmation for item added to workspace.
     */
    public static int item_added_to_workspace=0x00000000;
    /**
     * Accessibility confirmation for item move.
     */
    public static int item_moved=0x00000000;
    /**
     * Accessibility confirmation for item removed.
     */
    public static int item_removed=0x00000000;
    /**
     * Accessibility spoken hint message in widget picker, which allows user to add a widget. Custom action is the label for additional accessibility actions available in this mode [CHAR_LIMIT=100]
     */
    public static int long_accessible_way_to_add=0x00000000;
    /**
     * Accessibility spoken hint message in deep shortcut menu, which allows user to add a shortcut. Custom action is the label for additional accessibility actions available in this mode [CHAR_LIMIT=200]
     */
    public static int long_accessible_way_to_add_shortcut=0x00000000;
    /**
     * Message to tell the user to press and hold on a shortcut to add it [CHAR_LIMIT=50]
     */
    public static int long_press_shortcut_to_add=0x00000000;
    /**
     * Message to tell the user to press and hold on a widget to add it [CHAR_LIMIT=50]
     */
    public static int long_press_widget_to_add=0x00000000;
    /**
     * Name of a main process initializer class.
     */
    public static int main_process_initializer_class=0x00000000;
    /**
     * String representing the intent for search on the apps market. To specify a query, add
     * q=<query> to the data to the intent
     */
    public static int market_search_intent=0x00000000;
    /**
     * Accessibility description to move item to empty cell.
     */
    public static int move_to_empty_cell=0x00000000;
    /**
     * Accessibility description to move item to the hotseat.
     */
    public static int move_to_hotseat_position=0x00000000;
    /**
     * Accessibility description to move item inside a folder.
     */
    public static int move_to_position=0x00000000;
    /**
     * Message shown when a feature is disabled by the administrator
     */
    public static int msg_disabled_by_admin=0x00000000;
    /**
     * Message explaining to the user that the notification access is required by the app for showing 'Notification dots' [CHAR LIMIT=NONE]
     */
    public static int msg_missing_notification_access=0x00000000;
    /**
     * Toast shown on clicking a direct call shortcut. [CHAR_LIMIT=80]
     */
    public static int msg_no_phone_permission=0x00000000;
    /**
     * Accessibility confirmation for notification being dismissed.
     */
    public static int notification_dismissed=0x00000000;
    /**
     * Text to display as the header above notifications. [CHAR_LIMIT=30]
     */
    public static int notifications_header=0x00000000;
    /**
     * Error message when user has filled a home screen
     */
    public static int out_of_space=0x00000000;
    public static int overview_callbacks_class=0x00000000;
    /**
     * Label on an icon that references an uninstalled package, for which we have no information about when it might be installed. [CHAR_LIMIT=15]
     */
    public static int package_state_unknown=0x00000000;
    /**
     * Permission description
     */
    public static int permdesc_install_shortcut=0x00000000;
    /**
     * Permission description
     */
    public static int permdesc_read_settings=0x00000000;
    /**
     * Permission description
     */
    public static int permdesc_write_settings=0x00000000;
    /**
     * Permission short label
     */
    public static int permlab_install_shortcut=0x00000000;
    /**
     * Permission short label
     */
    public static int permlab_read_settings=0x00000000;
    /**
     * Permission short label
     */
    public static int permlab_write_settings=0x00000000;
    /**
     * Button label to automatically add icon on home screen [CHAR_LIMIT=50]
     */
    public static int place_automatically=0x00000000;
    /**
     * Title for an option to keep an app pinned to the screen until it is unpinned
     */
    public static int recent_task_option_pin=0x00000000;
    /**
     * Title for an option to enter split screen mode for a given app
     */
    public static int recent_task_option_split_screen=0x00000000;
    /**
     * Recents: Title of a button that clears the task list, i.e. closes all tasks. [CHAR LIMIT=30]
     */
    public static int recents_clear_all=0x00000000;
    /**
     * Recents: The empty recents string. [CHAR LIMIT=NONE]
     */
    public static int recents_empty_message=0x00000000;
    /**
     * Label for remove drop target. [CHAR_LIMIT=20]
     */
    public static int remove_drop_target_label=0x00000000;
    /**
     * SafeMode shortcut error string
     */
    public static int safemode_shortcut_error=0x00000000;
    /**
     * SafeMode widget error string
     */
    public static int safemode_widget_error=0x00000000;
    /**
     * Text for settings button
     */
    public static int settings_button_text=0x00000000;
    /**
     * Message shown when a shortcut is not available. It could have been temporarily disabled and may start working again after some time.
     */
    public static int shortcut_not_available=0x00000000;
    /**
     * Whitelisted package to retrieve packagename for badge. Can be empty.
     */
    public static int shortcutinfocompat_badgepkg_whitelist=0x00000000;
    /**
     * Accessibility description when the context menu of a launcher icon that has notifications as well as shortcuts (providing quick access to app's actions). The "shortcuts" translation should be consistent with the one for action_deep_shortcut. [CHAR_LIMIT=50]
     */
    public static int shortcuts_menu_with_notifications_description=0x00000000;
    public static int status_bar_notification_info_overflow=0x00000000;
    public static int task_overlay_factory_class=0x00000000;
    /**
     * Button text in the confirmation dialog which would take the user to the system settings [CHAR LIMIT=50]
     */
    public static int title_change_settings=0x00000000;
    /**
     * Title for the dialog shown when the app does not has notification access, explaining the requirement for notification access [CHAR LIMIT=50]
     */
    public static int title_missing_notification_access=0x00000000;
    /**
     * Label for uninstall drop target. [CHAR_LIMIT=20]
     */
    public static int uninstall_drop_target_label=0x00000000;
    /**
     * Text to inform the user that they can't uninstall a system application
     */
    public static int uninstall_system_app_text=0x00000000;
    /**
     * Name of a user event dispatcher class.
     */
    public static int user_event_dispatcher_class=0x00000000;
    /**
     * Text for wallpaper change button
     */
    public static int wallpaper_button_text=0x00000000;
    /**
     * Package name of the default wallpaper picker.
     */
    public static int wallpaper_picker_package=0x00000000;
    /**
     * Accessibility spoken message format for the dimensions of a widget in the drawer
     */
    public static int widget_accessible_dims_format=0x00000000;
    /**
     * Text for widget add button
     */
    public static int widget_button_text=0x00000000;
    /**
     * There is a special version of this format string for Farsi
     */
    public static int widget_dims_format=0x00000000;
    /**
     * Accessibility confirmation for widget resize.
     */
    public static int widget_resized=0x00000000;
    /**
     * Title for a bottom sheet that shows widgets for a particular app
     */
    public static int widgets_bottom_sheet_title=0x00000000;
    /**
     * Accessibility title for the popup containing a list of widgets. [CHAR_LIMIT=50]
     */
    public static int widgets_list=0x00000000;
    /**
     * Text announced by accessibility when the popup containing the list of widgets is closed. [CHAR_LIMIT=100]
     */
    public static int widgets_list_closed=0x00000000;
    /**
     * Work folder name
     */
    public static int work_folder_name=0x00000000;
    /**
     * This string appears under a the label of a toggle in the work profile tab on a user's phone. It describes the status of the toggle, "Work profile," when it's turned off. "Work profile" means a separate profile on a user's phone that's speficially for their work apps and is managed by their company.
     */
    public static int work_mode_off_label=0x00000000;
    /**
     * This string is in the work profile tab when a user has All Apps open on their phone. It describes the label of a toggle, "Work profile," as being managed by the user's employer.
     * "Organization" is used to represent a variety of businesses, non-profits, and educational institutions).
     */
    public static int work_mode_on_label=0x00000000;
    /**
     * This string is in the work profile tab when a user has All Apps open on their phone. This is a label for a toggle to turn the work profile on and off. "Work profile" means a separate profile on a user's phone that's specifically for their work apps and managed by their company. "Work" is used as an adjective.
     */
    public static int work_profile_toggle_label=0x00000000;
    /**
     * Description for a new page on homescreen[CHAR_LIMIT=none]
     */
    public static int workspace_new_page=0x00000000;
    /**
     * The format string for Workspace page scroll text [CHAR_LIMIT=none]
     */
    public static int workspace_scroll_format=0x00000000;
  }
  public static final class style {
    public static int AllAppsEmptySearchBackground=0x00000000;
    public static int AllAppsEmptySearchBackground_Dark=0x00000000;
    /**
     * A derivative project can extend these themes to customize the application theme without
     * affecting the base theme
     */
    public static int AppTheme=0x00000000;
    public static int AppTheme_Dark=0x00000000;
    public static int AppTheme_Dark_DarkText=0x00000000;
    public static int AppTheme_DarkText=0x00000000;
    /**
     * Base theme for BubbleTextView and sub classes
     */
    public static int BaseIcon=0x00000000;
    /**
     * Icon displayed on the worksapce
     */
    public static int BaseIcon_Workspace=0x00000000;
    /**
     * Launcher theme
     */
    public static int BaseLauncherTheme=0x00000000;
    public static int BaseLauncherThemeWithCustomAttrs=0x00000000;
    /**
     * Workspace
     */
    public static int DropTargetButton=0x00000000;
    /**
     * Drop targets
     */
    public static int DropTargetButtonBase=0x00000000;
    public static int FastScrollerPopup=0x00000000;
    /**
     * Theme overrides to element on homescreen, i.e., which are drawn on top on wallpaper.
     * Various foreground colors are overridden to be workspaceTextColor so that they are properly
     * visible on various wallpapers.
     */
    public static int HomeScreenElementTheme=0x00000000;
    public static int LauncherTheme=0x00000000;
    public static int LauncherTheme_Dark=0x00000000;
    public static int LauncherTheme_Dark_DarkText=0x00000000;
    public static int LauncherTheme_DarkText=0x00000000;
    /**
     * Theme for the popup container
     */
    public static int PopupItem=0x00000000;
    /**
     * Task Menu layout styles.
     * Task Menu layout styles.
     */
    public static int TaskMenu=0x00000000;
    /**
     * Task Menu Option layout styles.
     * Task Menu Option layout styles.
     */
    public static int TaskMenu_Option=0x00000000;
    public static int TextAppearance_Compat_Notification=0x00000000;
    public static int TextAppearance_Compat_Notification_Info=0x00000000;
    public static int TextAppearance_Compat_Notification_Info_Media=0x00000000;
    public static int TextAppearance_Compat_Notification_Line2=0x00000000;
    public static int TextAppearance_Compat_Notification_Line2_Media=0x00000000;
    public static int TextAppearance_Compat_Notification_Media=0x00000000;
    public static int TextAppearance_Compat_Notification_Time=0x00000000;
    public static int TextAppearance_Compat_Notification_Time_Media=0x00000000;
    public static int TextAppearance_Compat_Notification_Title=0x00000000;
    public static int TextAppearance_Compat_Notification_Title_Media=0x00000000;
    public static int TextTitle=0x00000000;
    public static int Widget_Compat_NotificationActionContainer=0x00000000;
    public static int Widget_Compat_NotificationActionText=0x00000000;
    public static int Widget_Support_CoordinatorLayout=0x00000000;
    /**
     * Theme for the widget container. Overridden on API 26.
     * Theme for the widget container.
     */
    public static int WidgetContainerTheme=0x00000000;
    public static int WidgetContainerTheme_Dark=0x00000000;
  }
  public static final class styleable {
    /**
     * BubbleTextView specific attributes.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BubbleTextView_centerVertically com.android.launcher3:centerVertically}</code></td><td></td></tr>
     * <tr><td><code>{@link #BubbleTextView_iconDisplay com.android.launcher3:iconDisplay}</code></td><td></td></tr>
     * <tr><td><code>{@link #BubbleTextView_iconSizeOverride com.android.launcher3:iconSizeOverride}</code></td><td></td></tr>
     * <tr><td><code>{@link #BubbleTextView_layoutHorizontal com.android.launcher3:layoutHorizontal}</code></td><td></td></tr>
     * </table>
     * @see #BubbleTextView_centerVertically
     * @see #BubbleTextView_iconDisplay
     * @see #BubbleTextView_iconSizeOverride
     * @see #BubbleTextView_layoutHorizontal
     */
    public static final int[] BubbleTextView={
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#centerVertically}
     * attribute's value can be found in the {@link #BubbleTextView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:centerVertically
     */
    public static int BubbleTextView_centerVertically=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#iconDisplay}
     * attribute's value can be found in the {@link #BubbleTextView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all_apps</td><td>1</td><td></td></tr>
     * <tr><td>folder</td><td>2</td><td></td></tr>
     * <tr><td>shortcut_popup</td><td>4</td><td></td></tr>
     * <tr><td>widget_section</td><td>3</td><td></td></tr>
     * <tr><td>workspace</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:iconDisplay
     */
    public static int BubbleTextView_iconDisplay=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#iconSizeOverride}
     * attribute's value can be found in the {@link #BubbleTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:iconSizeOverride
     */
    public static int BubbleTextView_iconSizeOverride=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layoutHorizontal}
     * attribute's value can be found in the {@link #BubbleTextView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layoutHorizontal
     */
    public static int BubbleTextView_layoutHorizontal=3;
    /**
     * Attributes that can be used with a CellLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CellLayout_containerType com.android.launcher3:containerType}</code></td><td></td></tr>
     * </table>
     * @see #CellLayout_containerType
     */
    public static final int[] CellLayout={
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#containerType}
     * attribute's value can be found in the {@link #CellLayout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>folder</td><td>2</td><td></td></tr>
     * <tr><td>hotseat</td><td>1</td><td></td></tr>
     * <tr><td>workspace</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:containerType
     */
    public static int CellLayout_containerType=0;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.android.launcher3:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.android.launcher3:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:keylines
     */
    public static int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:statusBarBackground
     */
    public static int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.android.launcher3:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.android.launcher3:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.android.launcher3:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.android.launcher3:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.android.launcher3:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.android.launcher3:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     */
    public static final int[] CoordinatorLayout_Layout={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x010100b3
    };
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layout_anchor
     */
    public static int CoordinatorLayout_Layout_layout_anchor=0;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_anchorGravity
     */
    public static int CoordinatorLayout_Layout_layout_anchorGravity=1;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layout_behavior
     */
    public static int CoordinatorLayout_Layout_layout_behavior=2;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_dodgeInsetEdges
     */
    public static int CoordinatorLayout_Layout_layout_dodgeInsetEdges=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_insetEdge
     */
    public static int CoordinatorLayout_Layout_layout_insetEdge=4;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_keyline
     */
    public static int CoordinatorLayout_Layout_layout_keyline=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static int CoordinatorLayout_Layout_android_layout_gravity=6;
    /**
     * Attributes that can be used with a CustomAppWidgetProviderInfo.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CustomAppWidgetProviderInfo_numColumns com.android.launcher3:numColumns}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAppWidgetProviderInfo_numMinColumns com.android.launcher3:numMinColumns}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAppWidgetProviderInfo_numMinRows com.android.launcher3:numMinRows}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAppWidgetProviderInfo_numRows com.android.launcher3:numRows}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAppWidgetProviderInfo_providerId com.android.launcher3:providerId}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAppWidgetProviderInfo_android_label android:label}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAppWidgetProviderInfo_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAppWidgetProviderInfo_android_initialLayout android:initialLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAppWidgetProviderInfo_android_previewImage android:previewImage}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAppWidgetProviderInfo_android_resizeMode android:resizeMode}</code></td><td></td></tr>
     * </table>
     * @see #CustomAppWidgetProviderInfo_numColumns
     * @see #CustomAppWidgetProviderInfo_numMinColumns
     * @see #CustomAppWidgetProviderInfo_numMinRows
     * @see #CustomAppWidgetProviderInfo_numRows
     * @see #CustomAppWidgetProviderInfo_providerId
     * @see #CustomAppWidgetProviderInfo_android_label
     * @see #CustomAppWidgetProviderInfo_android_icon
     * @see #CustomAppWidgetProviderInfo_android_initialLayout
     * @see #CustomAppWidgetProviderInfo_android_previewImage
     * @see #CustomAppWidgetProviderInfo_android_resizeMode
     */
    public static final int[] CustomAppWidgetProviderInfo={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x01010001, 0x01010002, 0x01010251, 
      0x010102da, 0x01010363
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#numColumns}
     * attribute's value can be found in the {@link #CustomAppWidgetProviderInfo} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numColumns
     */
    public static int CustomAppWidgetProviderInfo_numColumns=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#numMinColumns}
     * attribute's value can be found in the {@link #CustomAppWidgetProviderInfo} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numMinColumns
     */
    public static int CustomAppWidgetProviderInfo_numMinColumns=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#numMinRows}
     * attribute's value can be found in the {@link #CustomAppWidgetProviderInfo} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numMinRows
     */
    public static int CustomAppWidgetProviderInfo_numMinRows=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#numRows}
     * attribute's value can be found in the {@link #CustomAppWidgetProviderInfo} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numRows
     */
    public static int CustomAppWidgetProviderInfo_numRows=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#providerId}
     * attribute's value can be found in the {@link #CustomAppWidgetProviderInfo} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:providerId
     */
    public static int CustomAppWidgetProviderInfo_providerId=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#label}
     * attribute's value can be found in the {@link #CustomAppWidgetProviderInfo} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:label
     */
    public static int CustomAppWidgetProviderInfo_android_label=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #CustomAppWidgetProviderInfo} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static int CustomAppWidgetProviderInfo_android_icon=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#initialLayout}
     * attribute's value can be found in the {@link #CustomAppWidgetProviderInfo} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:initialLayout
     */
    public static int CustomAppWidgetProviderInfo_android_initialLayout=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#previewImage}
     * attribute's value can be found in the {@link #CustomAppWidgetProviderInfo} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:previewImage
     */
    public static int CustomAppWidgetProviderInfo_android_previewImage=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#resizeMode}
     * attribute's value can be found in the {@link #CustomAppWidgetProviderInfo} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:resizeMode
     */
    public static int CustomAppWidgetProviderInfo_android_resizeMode=9;
    /**
     * Attributes that can be used with a Extra.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Extra_key com.android.launcher3:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Extra_value com.android.launcher3:value}</code></td><td></td></tr>
     * </table>
     * @see #Extra_key
     * @see #Extra_value
     */
    public static final int[] Extra={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#key}
     * attribute's value can be found in the {@link #Extra} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:key
     */
    public static int Extra_key=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#value}
     * attribute's value can be found in the {@link #Extra} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:value
     */
    public static int Extra_value=1;
    /**
     * XML attributes used by default_workspace.xml
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Favorite_className com.android.launcher3:className}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_container com.android.launcher3:container}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_icon com.android.launcher3:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_packageName com.android.launcher3:packageName}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_screen com.android.launcher3:screen}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_spanX com.android.launcher3:spanX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_spanY com.android.launcher3:spanY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_title com.android.launcher3:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_uri com.android.launcher3:uri}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_x com.android.launcher3:x}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_y com.android.launcher3:y}</code></td><td></td></tr>
     * </table>
     * @see #Favorite_className
     * @see #Favorite_container
     * @see #Favorite_icon
     * @see #Favorite_packageName
     * @see #Favorite_screen
     * @see #Favorite_spanX
     * @see #Favorite_spanY
     * @see #Favorite_title
     * @see #Favorite_uri
     * @see #Favorite_x
     * @see #Favorite_y
     */
    public static final int[] Favorite={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#className}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:className
     */
    public static int Favorite_className=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#container}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:container
     */
    public static int Favorite_container=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#icon}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:icon
     */
    public static int Favorite_icon=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#packageName}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:packageName
     */
    public static int Favorite_packageName=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#screen}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:screen
     */
    public static int Favorite_screen=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#spanX}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:spanX
     */
    public static int Favorite_spanX=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#spanY}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:spanY
     */
    public static int Favorite_spanY=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#title}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:title
     */
    public static int Favorite_title=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#uri}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:uri
     */
    public static int Favorite_uri=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#x}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:x
     */
    public static int Favorite_x=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#y}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:y
     */
    public static int Favorite_y=10;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.android.launcher3:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.android.launcher3:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.android.launcher3:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.android.launcher3:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.android.launcher3:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.android.launcher3:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     */
    public static final int[] FontFamily={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontProviderAuthority
     */
    public static int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:fontProviderCerts
     */
    public static int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:fontProviderFetchStrategy
     */
    public static int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:fontProviderFetchTimeout
     */
    public static int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontProviderPackage
     */
    public static int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontProviderQuery
     */
    public static int FontFamily_fontProviderQuery=5;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.android.launcher3:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.android.launcher3:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.android.launcher3:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.android.launcher3:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.android.launcher3:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * </table>
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     */
    public static final int[] FontFamilyFont={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x01010532, 0x01010533, 0x0101053f, 
      0x0101056f, 0x01010570
    };
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:font
     */
    public static int FontFamilyFont_font=0;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:fontStyle
     */
    public static int FontFamilyFont_fontStyle=1;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontVariationSettings
     */
    public static int FontFamilyFont_fontVariationSettings=2;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:fontWeight
     */
    public static int FontFamilyFont_fontWeight=3;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:ttcIndex
     */
    public static int FontFamilyFont_ttcIndex=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static int FontFamilyFont_android_font=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static int FontFamilyFont_android_fontWeight=6;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static int FontFamilyFont_android_fontStyle=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static int FontFamilyFont_android_ttcIndex=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static int FontFamilyFont_android_fontVariationSettings=9;
    /**
     * Attributes that can be used with a Include.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Include_folderItems com.android.launcher3:folderItems}</code></td><td></td></tr>
     * <tr><td><code>{@link #Include_workspace com.android.launcher3:workspace}</code></td><td></td></tr>
     * </table>
     * @see #Include_folderItems
     * @see #Include_workspace
     */
    public static final int[] Include={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#folderItems}
     * attribute's value can be found in the {@link #Include} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:folderItems
     */
    public static int Include_folderItems=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#workspace}
     * attribute's value can be found in the {@link #Include} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:workspace
     */
    public static int Include_workspace=1;
    /**
     * Attributes that can be used with a InsettableFrameLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #InsettableFrameLayout_Layout_layout_ignoreInsets com.android.launcher3:layout_ignoreInsets}</code></td><td></td></tr>
     * </table>
     * @see #InsettableFrameLayout_Layout_layout_ignoreInsets
     */
    public static final int[] InsettableFrameLayout_Layout={
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_ignoreInsets}
     * attribute's value can be found in the {@link #InsettableFrameLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layout_ignoreInsets
     */
    public static int InsettableFrameLayout_Layout_layout_ignoreInsets=0;
    /**
     * Attributes that can be used with a InvariantDeviceProfile.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_defaultLayoutId com.android.launcher3:defaultLayoutId}</code></td><td></td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_demoModeLayoutId com.android.launcher3:demoModeLayoutId}</code></td><td></td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_iconSize com.android.launcher3:iconSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_iconTextSize com.android.launcher3:iconTextSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_landscapeIconSize com.android.launcher3:landscapeIconSize}</code></td><td>landscapeIconSize defaults to iconSize, if not specified</td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_minHeightDps com.android.launcher3:minHeightDps}</code></td><td></td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_minWidthDps com.android.launcher3:minWidthDps}</code></td><td></td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_name com.android.launcher3:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_numColumns com.android.launcher3:numColumns}</code></td><td></td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_numFolderColumns com.android.launcher3:numFolderColumns}</code></td><td></td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_numFolderRows com.android.launcher3:numFolderRows}</code></td><td>numFolderRows & numFolderColumns defaults to numRows & numColumns, if not specified</td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_numHotseatIcons com.android.launcher3:numHotseatIcons}</code></td><td>numHotseatIcons defaults to numColumns, if not specified</td></tr>
     * <tr><td><code>{@link #InvariantDeviceProfile_numRows com.android.launcher3:numRows}</code></td><td></td></tr>
     * </table>
     * @see #InvariantDeviceProfile_defaultLayoutId
     * @see #InvariantDeviceProfile_demoModeLayoutId
     * @see #InvariantDeviceProfile_iconSize
     * @see #InvariantDeviceProfile_iconTextSize
     * @see #InvariantDeviceProfile_landscapeIconSize
     * @see #InvariantDeviceProfile_minHeightDps
     * @see #InvariantDeviceProfile_minWidthDps
     * @see #InvariantDeviceProfile_name
     * @see #InvariantDeviceProfile_numColumns
     * @see #InvariantDeviceProfile_numFolderColumns
     * @see #InvariantDeviceProfile_numFolderRows
     * @see #InvariantDeviceProfile_numHotseatIcons
     * @see #InvariantDeviceProfile_numRows
     */
    public static final int[] InvariantDeviceProfile={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#defaultLayoutId}
     * attribute's value can be found in the {@link #InvariantDeviceProfile} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:defaultLayoutId
     */
    public static int InvariantDeviceProfile_defaultLayoutId=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#demoModeLayoutId}
     * attribute's value can be found in the {@link #InvariantDeviceProfile} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:demoModeLayoutId
     */
    public static int InvariantDeviceProfile_demoModeLayoutId=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#iconSize}
     * attribute's value can be found in the {@link #InvariantDeviceProfile} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:iconSize
     */
    public static int InvariantDeviceProfile_iconSize=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#iconTextSize}
     * attribute's value can be found in the {@link #InvariantDeviceProfile} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:iconTextSize
     */
    public static int InvariantDeviceProfile_iconTextSize=3;
    /**
     * <p>
     * @attr description
     * landscapeIconSize defaults to iconSize, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:landscapeIconSize
     */
    public static int InvariantDeviceProfile_landscapeIconSize=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#minHeightDps}
     * attribute's value can be found in the {@link #InvariantDeviceProfile} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:minHeightDps
     */
    public static int InvariantDeviceProfile_minHeightDps=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#minWidthDps}
     * attribute's value can be found in the {@link #InvariantDeviceProfile} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:minWidthDps
     */
    public static int InvariantDeviceProfile_minWidthDps=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#name}
     * attribute's value can be found in the {@link #InvariantDeviceProfile} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:name
     */
    public static int InvariantDeviceProfile_name=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#numColumns}
     * attribute's value can be found in the {@link #InvariantDeviceProfile} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numColumns
     */
    public static int InvariantDeviceProfile_numColumns=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#numFolderColumns}
     * attribute's value can be found in the {@link #InvariantDeviceProfile} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numFolderColumns
     */
    public static int InvariantDeviceProfile_numFolderColumns=9;
    /**
     * <p>
     * @attr description
     * numFolderRows & numFolderColumns defaults to numRows & numColumns, if not specified
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numFolderRows
     */
    public static int InvariantDeviceProfile_numFolderRows=10;
    /**
     * <p>
     * @attr description
     * numHotseatIcons defaults to numColumns, if not specified
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numHotseatIcons
     */
    public static int InvariantDeviceProfile_numHotseatIcons=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#numRows}
     * attribute's value can be found in the {@link #InvariantDeviceProfile} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numRows
     */
    public static int InvariantDeviceProfile_numRows=12;
    /**
     * PagedView specific attributes. These attributes are used to customize
     * a PagedView view in XML files.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PagedView_pageIndicator com.android.launcher3:pageIndicator}</code></td><td>The page indicator for this workspace</td></tr>
     * </table>
     * @see #PagedView_pageIndicator
     */
    public static final int[] PagedView={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * The page indicator for this workspace
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:pageIndicator
     */
    public static int PagedView_pageIndicator=0;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.android.launcher3:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.android.launcher3:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.android.launcher3:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.android.launcher3:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.android.launcher3:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.android.launcher3:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.android.launcher3:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.android.launcher3:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.android.launcher3:stackFromEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_descendantFocusability
     */
    public static final int[] RecyclerView={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x010100c4, 0x010100f1
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:fastScrollEnabled
     */
    public static int RecyclerView_fastScrollEnabled=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:fastScrollHorizontalThumbDrawable
     */
    public static int RecyclerView_fastScrollHorizontalThumbDrawable=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:fastScrollHorizontalTrackDrawable
     */
    public static int RecyclerView_fastScrollHorizontalTrackDrawable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:fastScrollVerticalThumbDrawable
     */
    public static int RecyclerView_fastScrollVerticalThumbDrawable=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:fastScrollVerticalTrackDrawable
     */
    public static int RecyclerView_fastScrollVerticalTrackDrawable=4;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extandroidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layoutManager
     */
    public static int RecyclerView_layoutManager=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:reverseLayout
     */
    public static int RecyclerView_reverseLayout=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:spanCount
     */
    public static int RecyclerView_spanCount=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:stackFromEnd
     */
    public static int RecyclerView_stackFromEnd=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static int RecyclerView_android_orientation=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static int RecyclerView_android_descendantFocusability=10;
    /**
     * Attributes that can be used with a RecyclerViewFastScroller.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerViewFastScroller_canThumbDetach com.android.launcher3:canThumbDetach}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerViewFastScroller_canThumbDetach
     */
    public static final int[] RecyclerViewFastScroller={
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#canThumbDetach}
     * attribute's value can be found in the {@link #RecyclerViewFastScroller} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:canThumbDetach
     */
    public static int RecyclerViewFastScroller_canThumbDetach=0;
    /**
     * Attributes that can be used with a ShadowDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShadowDrawable_darkTintColor com.android.launcher3:darkTintColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowDrawable_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowDrawable_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowDrawable_android_elevation android:elevation}</code></td><td></td></tr>
     * </table>
     * @see #ShadowDrawable_darkTintColor
     * @see #ShadowDrawable_android_src
     * @see #ShadowDrawable_android_shadowColor
     * @see #ShadowDrawable_android_elevation
     */
    public static final int[] ShadowDrawable={
      0x00000000, 0x01010119, 0x01010161, 0x01010440
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#darkTintColor}
     * attribute's value can be found in the {@link #ShadowDrawable} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:darkTintColor
     */
    public static int ShadowDrawable_darkTintColor=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #ShadowDrawable} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static int ShadowDrawable_android_src=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #ShadowDrawable} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static int ShadowDrawable_android_shadowColor=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #ShadowDrawable} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static int ShadowDrawable_android_elevation=3;
    /**
     * Attributes that can be used with a ShadowInfo.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShadowInfo_ambientShadowBlur com.android.launcher3:ambientShadowBlur}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowInfo_ambientShadowColor com.android.launcher3:ambientShadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowInfo_keyShadowBlur com.android.launcher3:keyShadowBlur}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowInfo_keyShadowColor com.android.launcher3:keyShadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowInfo_keyShadowOffset com.android.launcher3:keyShadowOffset}</code></td><td></td></tr>
     * </table>
     * @see #ShadowInfo_ambientShadowBlur
     * @see #ShadowInfo_ambientShadowColor
     * @see #ShadowInfo_keyShadowBlur
     * @see #ShadowInfo_keyShadowColor
     * @see #ShadowInfo_keyShadowOffset
     */
    public static final int[] ShadowInfo={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#ambientShadowBlur}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:ambientShadowBlur
     */
    public static int ShadowInfo_ambientShadowBlur=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#ambientShadowColor}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:ambientShadowColor
     */
    public static int ShadowInfo_ambientShadowColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#keyShadowBlur}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:keyShadowBlur
     */
    public static int ShadowInfo_keyShadowBlur=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#keyShadowColor}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:keyShadowColor
     */
    public static int ShadowInfo_keyShadowColor=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#keyShadowOffset}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:keyShadowOffset
     */
    public static int ShadowInfo_keyShadowOffset=4;
  }
  public static final class xml {
    public static int backupscheme=0x00000000;
    public static int custom_widgets=0x00000000;
    public static int default_workspace_3x3=0x00000000;
    public static int default_workspace_4x4=0x00000000;
    public static int default_workspace_5x5=0x00000000;
    public static int default_workspace_5x6=0x00000000;
    public static int device_profiles=0x00000000;
    public static int dw_phone_hotseat=0x00000000;
    public static int dw_tablet_hotseat=0x00000000;
    public static int indexable_launcher_prefs=0x00000000;
    public static int launcher_preferences=0x00000000;
  }
}