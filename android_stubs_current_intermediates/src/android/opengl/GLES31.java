/*
* Copyright 2014 The Android Open Source Project
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

// This source file is automatically generated

package android.opengl;
public class GLES31
  extends android.opengl.GLES30
{
GLES31() { throw new RuntimeException("Stub!"); }
public static native  void glDispatchCompute(int num_groups_x, int num_groups_y, int num_groups_z);
public static native  void glDispatchComputeIndirect(long indirect);
public static native  void glDrawArraysIndirect(int mode, long indirect);
public static native  void glDrawElementsIndirect(int mode, int type, long indirect);
public static native  void glFramebufferParameteri(int target, int pname, int param);
public static native  void glGetFramebufferParameteriv(int target, int pname, int[] params, int offset);
public static native  void glGetFramebufferParameteriv(int target, int pname, java.nio.IntBuffer params);
public static native  void glGetProgramInterfaceiv(int program, int programInterface, int pname, int[] params, int offset);
public static native  void glGetProgramInterfaceiv(int program, int programInterface, int pname, java.nio.IntBuffer params);
public static native  int glGetProgramResourceIndex(int program, int programInterface, java.lang.String name);
public static native  java.lang.String glGetProgramResourceName(int program, int programInterface, int index);
public static native  void glGetProgramResourceiv(int program, int programInterface, int index, int propCount, int[] props, int propsOffset, int bufSize, int[] length, int lengthOffset, int[] params, int paramsOffset);
public static native  void glGetProgramResourceiv(int program, int programInterface, int index, int propCount, java.nio.IntBuffer props, int bufSize, java.nio.IntBuffer length, java.nio.IntBuffer params);
public static native  int glGetProgramResourceLocation(int program, int programInterface, java.lang.String name);
public static native  void glUseProgramStages(int pipeline, int stages, int program);
public static native  void glActiveShaderProgram(int pipeline, int program);
public static native  int glCreateShaderProgramv(int type, java.lang.String[] strings);
public static native  void glBindProgramPipeline(int pipeline);
public static native  void glDeleteProgramPipelines(int n, int[] pipelines, int offset);
public static native  void glDeleteProgramPipelines(int n, java.nio.IntBuffer pipelines);
public static native  void glGenProgramPipelines(int n, int[] pipelines, int offset);
public static native  void glGenProgramPipelines(int n, java.nio.IntBuffer pipelines);
public static native  boolean glIsProgramPipeline(int pipeline);
public static native  void glGetProgramPipelineiv(int pipeline, int pname, int[] params, int offset);
public static native  void glGetProgramPipelineiv(int pipeline, int pname, java.nio.IntBuffer params);
public static native  void glProgramUniform1i(int program, int location, int v0);
public static native  void glProgramUniform2i(int program, int location, int v0, int v1);
public static native  void glProgramUniform3i(int program, int location, int v0, int v1, int v2);
public static native  void glProgramUniform4i(int program, int location, int v0, int v1, int v2, int v3);
public static native  void glProgramUniform1ui(int program, int location, int v0);
public static native  void glProgramUniform2ui(int program, int location, int v0, int v1);
public static native  void glProgramUniform3ui(int program, int location, int v0, int v1, int v2);
public static native  void glProgramUniform4ui(int program, int location, int v0, int v1, int v2, int v3);
public static native  void glProgramUniform1f(int program, int location, float v0);
public static native  void glProgramUniform2f(int program, int location, float v0, float v1);
public static native  void glProgramUniform3f(int program, int location, float v0, float v1, float v2);
public static native  void glProgramUniform4f(int program, int location, float v0, float v1, float v2, float v3);
public static native  void glProgramUniform1iv(int program, int location, int count, int[] value, int offset);
public static native  void glProgramUniform1iv(int program, int location, int count, java.nio.IntBuffer value);
public static native  void glProgramUniform2iv(int program, int location, int count, int[] value, int offset);
public static native  void glProgramUniform2iv(int program, int location, int count, java.nio.IntBuffer value);
public static native  void glProgramUniform3iv(int program, int location, int count, int[] value, int offset);
public static native  void glProgramUniform3iv(int program, int location, int count, java.nio.IntBuffer value);
public static native  void glProgramUniform4iv(int program, int location, int count, int[] value, int offset);
public static native  void glProgramUniform4iv(int program, int location, int count, java.nio.IntBuffer value);
public static native  void glProgramUniform1uiv(int program, int location, int count, int[] value, int offset);
public static native  void glProgramUniform1uiv(int program, int location, int count, java.nio.IntBuffer value);
public static native  void glProgramUniform2uiv(int program, int location, int count, int[] value, int offset);
public static native  void glProgramUniform2uiv(int program, int location, int count, java.nio.IntBuffer value);
public static native  void glProgramUniform3uiv(int program, int location, int count, int[] value, int offset);
public static native  void glProgramUniform3uiv(int program, int location, int count, java.nio.IntBuffer value);
public static native  void glProgramUniform4uiv(int program, int location, int count, int[] value, int offset);
public static native  void glProgramUniform4uiv(int program, int location, int count, java.nio.IntBuffer value);
public static native  void glProgramUniform1fv(int program, int location, int count, float[] value, int offset);
public static native  void glProgramUniform1fv(int program, int location, int count, java.nio.FloatBuffer value);
public static native  void glProgramUniform2fv(int program, int location, int count, float[] value, int offset);
public static native  void glProgramUniform2fv(int program, int location, int count, java.nio.FloatBuffer value);
public static native  void glProgramUniform3fv(int program, int location, int count, float[] value, int offset);
public static native  void glProgramUniform3fv(int program, int location, int count, java.nio.FloatBuffer value);
public static native  void glProgramUniform4fv(int program, int location, int count, float[] value, int offset);
public static native  void glProgramUniform4fv(int program, int location, int count, java.nio.FloatBuffer value);
public static native  void glProgramUniformMatrix2fv(int program, int location, int count, boolean transpose, float[] value, int offset);
public static native  void glProgramUniformMatrix2fv(int program, int location, int count, boolean transpose, java.nio.FloatBuffer value);
public static native  void glProgramUniformMatrix3fv(int program, int location, int count, boolean transpose, float[] value, int offset);
public static native  void glProgramUniformMatrix3fv(int program, int location, int count, boolean transpose, java.nio.FloatBuffer value);
public static native  void glProgramUniformMatrix4fv(int program, int location, int count, boolean transpose, float[] value, int offset);
public static native  void glProgramUniformMatrix4fv(int program, int location, int count, boolean transpose, java.nio.FloatBuffer value);
public static native  void glProgramUniformMatrix2x3fv(int program, int location, int count, boolean transpose, float[] value, int offset);
public static native  void glProgramUniformMatrix2x3fv(int program, int location, int count, boolean transpose, java.nio.FloatBuffer value);
public static native  void glProgramUniformMatrix3x2fv(int program, int location, int count, boolean transpose, float[] value, int offset);
public static native  void glProgramUniformMatrix3x2fv(int program, int location, int count, boolean transpose, java.nio.FloatBuffer value);
public static native  void glProgramUniformMatrix2x4fv(int program, int location, int count, boolean transpose, float[] value, int offset);
public static native  void glProgramUniformMatrix2x4fv(int program, int location, int count, boolean transpose, java.nio.FloatBuffer value);
public static native  void glProgramUniformMatrix4x2fv(int program, int location, int count, boolean transpose, float[] value, int offset);
public static native  void glProgramUniformMatrix4x2fv(int program, int location, int count, boolean transpose, java.nio.FloatBuffer value);
public static native  void glProgramUniformMatrix3x4fv(int program, int location, int count, boolean transpose, float[] value, int offset);
public static native  void glProgramUniformMatrix3x4fv(int program, int location, int count, boolean transpose, java.nio.FloatBuffer value);
public static native  void glProgramUniformMatrix4x3fv(int program, int location, int count, boolean transpose, float[] value, int offset);
public static native  void glProgramUniformMatrix4x3fv(int program, int location, int count, boolean transpose, java.nio.FloatBuffer value);
public static native  void glValidateProgramPipeline(int pipeline);
public static native  java.lang.String glGetProgramPipelineInfoLog(int program);
public static native  void glBindImageTexture(int unit, int texture, int level, boolean layered, int layer, int access, int format);
public static native  void glGetBooleani_v(int target, int index, boolean[] data, int offset);
public static native  void glGetBooleani_v(int target, int index, java.nio.IntBuffer data);
public static native  void glMemoryBarrier(int barriers);
public static native  void glMemoryBarrierByRegion(int barriers);
public static native  void glTexStorage2DMultisample(int target, int samples, int internalformat, int width, int height, boolean fixedsamplelocations);
public static native  void glGetMultisamplefv(int pname, int index, float[] val, int offset);
public static native  void glGetMultisamplefv(int pname, int index, java.nio.FloatBuffer val);
public static native  void glSampleMaski(int maskNumber, int mask);
public static native  void glGetTexLevelParameteriv(int target, int level, int pname, int[] params, int offset);
public static native  void glGetTexLevelParameteriv(int target, int level, int pname, java.nio.IntBuffer params);
public static native  void glGetTexLevelParameterfv(int target, int level, int pname, float[] params, int offset);
public static native  void glGetTexLevelParameterfv(int target, int level, int pname, java.nio.FloatBuffer params);
public static native  void glBindVertexBuffer(int bindingindex, int buffer, long offset, int stride);
public static native  void glVertexAttribFormat(int attribindex, int size, int type, boolean normalized, int relativeoffset);
public static native  void glVertexAttribIFormat(int attribindex, int size, int type, int relativeoffset);
public static native  void glVertexAttribBinding(int attribindex, int bindingindex);
public static native  void glVertexBindingDivisor(int bindingindex, int divisor);
public static final int GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = 37593;
public static final int GL_ACTIVE_PROGRAM = 33369;
public static final int GL_ACTIVE_RESOURCES = 37621;
public static final int GL_ACTIVE_VARIABLES = 37637;
public static final int GL_ALL_BARRIER_BITS = -1;
public static final int GL_ALL_SHADER_BITS = -1;
public static final int GL_ARRAY_SIZE = 37627;
public static final int GL_ARRAY_STRIDE = 37630;
public static final int GL_ATOMIC_COUNTER_BARRIER_BIT = 4096;
public static final int GL_ATOMIC_COUNTER_BUFFER = 37568;
public static final int GL_ATOMIC_COUNTER_BUFFER_BINDING = 37569;
public static final int GL_ATOMIC_COUNTER_BUFFER_INDEX = 37633;
public static final int GL_ATOMIC_COUNTER_BUFFER_SIZE = 37571;
public static final int GL_ATOMIC_COUNTER_BUFFER_START = 37570;
public static final int GL_BLOCK_INDEX = 37629;
public static final int GL_BUFFER_BINDING = 37634;
public static final int GL_BUFFER_DATA_SIZE = 37635;
public static final int GL_BUFFER_UPDATE_BARRIER_BIT = 512;
public static final int GL_BUFFER_VARIABLE = 37605;
public static final int GL_COMMAND_BARRIER_BIT = 64;
public static final int GL_COMPUTE_SHADER = 37305;
public static final int GL_COMPUTE_SHADER_BIT = 32;
public static final int GL_COMPUTE_WORK_GROUP_SIZE = 33383;
public static final int GL_DEPTH_STENCIL_TEXTURE_MODE = 37098;
public static final int GL_DISPATCH_INDIRECT_BUFFER = 37102;
public static final int GL_DISPATCH_INDIRECT_BUFFER_BINDING = 37103;
public static final int GL_DRAW_INDIRECT_BUFFER = 36671;
public static final int GL_DRAW_INDIRECT_BUFFER_BINDING = 36675;
public static final int GL_ELEMENT_ARRAY_BARRIER_BIT = 2;
public static final int GL_FRAGMENT_SHADER_BIT = 2;
public static final int GL_FRAMEBUFFER_BARRIER_BIT = 1024;
public static final int GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 37652;
public static final int GL_FRAMEBUFFER_DEFAULT_HEIGHT = 37649;
public static final int GL_FRAMEBUFFER_DEFAULT_SAMPLES = 37651;
public static final int GL_FRAMEBUFFER_DEFAULT_WIDTH = 37648;
public static final int GL_IMAGE_2D = 36941;
public static final int GL_IMAGE_2D_ARRAY = 36947;
public static final int GL_IMAGE_3D = 36942;
public static final int GL_IMAGE_BINDING_ACCESS = 36670;
public static final int GL_IMAGE_BINDING_FORMAT = 36974;
public static final int GL_IMAGE_BINDING_LAYER = 36669;
public static final int GL_IMAGE_BINDING_LAYERED = 36668;
public static final int GL_IMAGE_BINDING_LEVEL = 36667;
public static final int GL_IMAGE_BINDING_NAME = 36666;
public static final int GL_IMAGE_CUBE = 36944;
public static final int GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 37065;
public static final int GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 37064;
public static final int GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = 37063;
public static final int GL_INT_IMAGE_2D = 36952;
public static final int GL_INT_IMAGE_2D_ARRAY = 36958;
public static final int GL_INT_IMAGE_3D = 36953;
public static final int GL_INT_IMAGE_CUBE = 36955;
public static final int GL_INT_SAMPLER_2D_MULTISAMPLE = 37129;
public static final int GL_IS_ROW_MAJOR = 37632;
public static final int GL_LOCATION = 37646;
public static final int GL_MATRIX_STRIDE = 37631;
public static final int GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 37596;
public static final int GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 37592;
public static final int GL_MAX_COLOR_TEXTURE_SAMPLES = 37134;
public static final int GL_MAX_COMBINED_ATOMIC_COUNTERS = 37591;
public static final int GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 37585;
public static final int GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 33382;
public static final int GL_MAX_COMBINED_IMAGE_UNIFORMS = 37071;
public static final int GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 36665;
public static final int GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = 37084;
public static final int GL_MAX_COMPUTE_ATOMIC_COUNTERS = 33381;
public static final int GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 33380;
public static final int GL_MAX_COMPUTE_IMAGE_UNIFORMS = 37309;
public static final int GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 37083;
public static final int GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = 33378;
public static final int GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 37308;
public static final int GL_MAX_COMPUTE_UNIFORM_BLOCKS = 37307;
public static final int GL_MAX_COMPUTE_UNIFORM_COMPONENTS = 33379;
public static final int GL_MAX_COMPUTE_WORK_GROUP_COUNT = 37310;
public static final int GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 37099;
public static final int GL_MAX_COMPUTE_WORK_GROUP_SIZE = 37311;
public static final int GL_MAX_DEPTH_TEXTURE_SAMPLES = 37135;
public static final int GL_MAX_FRAGMENT_ATOMIC_COUNTERS = 37590;
public static final int GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 37584;
public static final int GL_MAX_FRAGMENT_IMAGE_UNIFORMS = 37070;
public static final int GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 37082;
public static final int GL_MAX_FRAMEBUFFER_HEIGHT = 37654;
public static final int GL_MAX_FRAMEBUFFER_SAMPLES = 37656;
public static final int GL_MAX_FRAMEBUFFER_WIDTH = 37653;
public static final int GL_MAX_IMAGE_UNITS = 36664;
public static final int GL_MAX_INTEGER_SAMPLES = 37136;
public static final int GL_MAX_NAME_LENGTH = 37622;
public static final int GL_MAX_NUM_ACTIVE_VARIABLES = 37623;
public static final int GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 36447;
public static final int GL_MAX_SAMPLE_MASK_WORDS = 36441;
public static final int GL_MAX_SHADER_STORAGE_BLOCK_SIZE = 37086;
public static final int GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = 37085;
public static final int GL_MAX_UNIFORM_LOCATIONS = 33390;
public static final int GL_MAX_VERTEX_ATOMIC_COUNTERS = 37586;
public static final int GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 37580;
public static final int GL_MAX_VERTEX_ATTRIB_BINDINGS = 33498;
public static final int GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 33497;
public static final int GL_MAX_VERTEX_ATTRIB_STRIDE = 33509;
public static final int GL_MAX_VERTEX_IMAGE_UNIFORMS = 37066;
public static final int GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = 37078;
public static final int GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 36446;
public static final int GL_NAME_LENGTH = 37625;
public static final int GL_NUM_ACTIVE_VARIABLES = 37636;
public static final int GL_OFFSET = 37628;
public static final int GL_PIXEL_BUFFER_BARRIER_BIT = 128;
public static final int GL_PROGRAM_INPUT = 37603;
public static final int GL_PROGRAM_OUTPUT = 37604;
public static final int GL_PROGRAM_PIPELINE_BINDING = 33370;
public static final int GL_PROGRAM_SEPARABLE = 33368;
public static final int GL_READ_ONLY = 35000;
public static final int GL_READ_WRITE = 35002;
public static final int GL_REFERENCED_BY_COMPUTE_SHADER = 37643;
public static final int GL_REFERENCED_BY_FRAGMENT_SHADER = 37642;
public static final int GL_REFERENCED_BY_VERTEX_SHADER = 37638;
public static final int GL_SAMPLER_2D_MULTISAMPLE = 37128;
public static final int GL_SAMPLE_MASK = 36433;
public static final int GL_SAMPLE_MASK_VALUE = 36434;
public static final int GL_SAMPLE_POSITION = 36432;
public static final int GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = 32;
public static final int GL_SHADER_STORAGE_BARRIER_BIT = 8192;
public static final int GL_SHADER_STORAGE_BLOCK = 37606;
public static final int GL_SHADER_STORAGE_BUFFER = 37074;
public static final int GL_SHADER_STORAGE_BUFFER_BINDING = 37075;
public static final int GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 37087;
public static final int GL_SHADER_STORAGE_BUFFER_SIZE = 37077;
public static final int GL_SHADER_STORAGE_BUFFER_START = 37076;
public static final int GL_STENCIL_INDEX = 6401;
public static final int GL_TEXTURE_2D_MULTISAMPLE = 37120;
public static final int GL_TEXTURE_ALPHA_SIZE = 32863;
public static final int GL_TEXTURE_ALPHA_TYPE = 35859;
public static final int GL_TEXTURE_BINDING_2D_MULTISAMPLE = 37124;
public static final int GL_TEXTURE_BLUE_SIZE = 32862;
public static final int GL_TEXTURE_BLUE_TYPE = 35858;
public static final int GL_TEXTURE_COMPRESSED = 34465;
public static final int GL_TEXTURE_DEPTH = 32881;
public static final int GL_TEXTURE_DEPTH_SIZE = 34890;
public static final int GL_TEXTURE_DEPTH_TYPE = 35862;
public static final int GL_TEXTURE_FETCH_BARRIER_BIT = 8;
public static final int GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 37127;
public static final int GL_TEXTURE_GREEN_SIZE = 32861;
public static final int GL_TEXTURE_GREEN_TYPE = 35857;
public static final int GL_TEXTURE_HEIGHT = 4097;
public static final int GL_TEXTURE_INTERNAL_FORMAT = 4099;
public static final int GL_TEXTURE_RED_SIZE = 32860;
public static final int GL_TEXTURE_RED_TYPE = 35856;
public static final int GL_TEXTURE_SAMPLES = 37126;
public static final int GL_TEXTURE_SHARED_SIZE = 35903;
public static final int GL_TEXTURE_STENCIL_SIZE = 35057;
public static final int GL_TEXTURE_UPDATE_BARRIER_BIT = 256;
public static final int GL_TEXTURE_WIDTH = 4096;
public static final int GL_TOP_LEVEL_ARRAY_SIZE = 37644;
public static final int GL_TOP_LEVEL_ARRAY_STRIDE = 37645;
public static final int GL_TRANSFORM_FEEDBACK_BARRIER_BIT = 2048;
public static final int GL_TRANSFORM_FEEDBACK_VARYING = 37620;
public static final int GL_TYPE = 37626;
public static final int GL_UNIFORM = 37601;
public static final int GL_UNIFORM_BARRIER_BIT = 4;
public static final int GL_UNIFORM_BLOCK = 37602;
public static final int GL_UNSIGNED_INT_ATOMIC_COUNTER = 37595;
public static final int GL_UNSIGNED_INT_IMAGE_2D = 36963;
public static final int GL_UNSIGNED_INT_IMAGE_2D_ARRAY = 36969;
public static final int GL_UNSIGNED_INT_IMAGE_3D = 36964;
public static final int GL_UNSIGNED_INT_IMAGE_CUBE = 36966;
public static final int GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 37130;
public static final int GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 1;
public static final int GL_VERTEX_ATTRIB_BINDING = 33492;
public static final int GL_VERTEX_ATTRIB_RELATIVE_OFFSET = 33493;
public static final int GL_VERTEX_BINDING_BUFFER = 36687;
public static final int GL_VERTEX_BINDING_DIVISOR = 33494;
public static final int GL_VERTEX_BINDING_OFFSET = 33495;
public static final int GL_VERTEX_BINDING_STRIDE = 33496;
public static final int GL_VERTEX_SHADER_BIT = 1;
public static final int GL_WRITE_ONLY = 35001;
}
