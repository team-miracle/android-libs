// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.android.systemui.statusbar.phone.nano;

@SuppressWarnings("hiding")
public interface TouchAnalyticsProto {

  public static final class Session extends
      com.google.protobuf.nano.MessageNano {

    // enum Result
    public static final int FAILURE = 0;
    public static final int SUCCESS = 1;
    public static final int UNKNOWN = 2;

    // enum Type
    public static final int RESERVED_1 = 0;
    public static final int RESERVED_2 = 1;
    public static final int RANDOM_WAKEUP = 2;
    public static final int REAL = 3;
    public static final int REJECTED_TOUCH_REPORT = 4;

    public static final class TouchEvent extends
        com.google.protobuf.nano.MessageNano {

      // enum Action
      public static final int DOWN = 0;
      public static final int UP = 1;
      public static final int MOVE = 2;
      public static final int CANCEL = 3;
      public static final int OUTSIDE = 4;
      public static final int POINTER_DOWN = 5;
      public static final int POINTER_UP = 6;

      public static final class BoundingBox extends
          com.google.protobuf.nano.MessageNano {

        private static volatile BoundingBox[] _emptyArray;
        public static BoundingBox[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new BoundingBox[0];
              }
            }
          }
          return _emptyArray;
        }

        private int bitField0_;

        // optional float width = 1;
        private float width_;
        public float getWidth() {
          return width_;
        }
        public BoundingBox setWidth(float value) {
          width_ = value;
          bitField0_ |= 0x00000001;
          return this;
        }
        public boolean hasWidth() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        public BoundingBox clearWidth() {
          width_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        // optional float height = 2;
        private float height_;
        public float getHeight() {
          return height_;
        }
        public BoundingBox setHeight(float value) {
          height_ = value;
          bitField0_ |= 0x00000002;
          return this;
        }
        public boolean hasHeight() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        public BoundingBox clearHeight() {
          height_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public BoundingBox() {
          clear();
        }

        public BoundingBox clear() {
          bitField0_ = 0;
          width_ = 0F;
          height_ = 0F;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeFloat(1, width_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, height_);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeFloatSize(1, width_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeFloatSize(2, height_);
          }
          return size;
        }

        @Override
        public BoundingBox mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 13: {
                width_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              }
              case 21: {
                height_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        }

        public static BoundingBox parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new BoundingBox(), data);
        }

        public static BoundingBox parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new BoundingBox().mergeFrom(input);
        }
      }

      public static final class Pointer extends
          com.google.protobuf.nano.MessageNano {

        private static volatile Pointer[] _emptyArray;
        public static Pointer[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Pointer[0];
              }
            }
          }
          return _emptyArray;
        }

        private int bitField0_;

        // optional float x = 1;
        private float x_;
        public float getX() {
          return x_;
        }
        public Pointer setX(float value) {
          x_ = value;
          bitField0_ |= 0x00000001;
          return this;
        }
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        public Pointer clearX() {
          x_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        // optional float y = 2;
        private float y_;
        public float getY() {
          return y_;
        }
        public Pointer setY(float value) {
          y_ = value;
          bitField0_ |= 0x00000002;
          return this;
        }
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        public Pointer clearY() {
          y_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        // optional float size = 3;
        private float size_;
        public float getSize() {
          return size_;
        }
        public Pointer setSize(float value) {
          size_ = value;
          bitField0_ |= 0x00000004;
          return this;
        }
        public boolean hasSize() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        public Pointer clearSize() {
          size_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        // optional float pressure = 4;
        private float pressure_;
        public float getPressure() {
          return pressure_;
        }
        public Pointer setPressure(float value) {
          pressure_ = value;
          bitField0_ |= 0x00000008;
          return this;
        }
        public boolean hasPressure() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        public Pointer clearPressure() {
          pressure_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        // optional int32 id = 5;
        private int id_;
        public int getId() {
          return id_;
        }
        public Pointer setId(int value) {
          id_ = value;
          bitField0_ |= 0x00000010;
          return this;
        }
        public boolean hasId() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        public Pointer clearId() {
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        // optional float removed_length = 6;
        private float removedLength_;
        public float getRemovedLength() {
          return removedLength_;
        }
        public Pointer setRemovedLength(float value) {
          removedLength_ = value;
          bitField0_ |= 0x00000020;
          return this;
        }
        public boolean hasRemovedLength() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        public Pointer clearRemovedLength() {
          removedLength_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        // optional .systemui.Session.TouchEvent.BoundingBox removed_boundingBox = 7;
        public com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.BoundingBox removedBoundingBox;

        public Pointer() {
          clear();
        }

        public Pointer clear() {
          bitField0_ = 0;
          x_ = 0F;
          y_ = 0F;
          size_ = 0F;
          pressure_ = 0F;
          id_ = 0;
          removedLength_ = 0F;
          removedBoundingBox = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeFloat(1, x_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, y_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeFloat(3, size_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFloat(4, pressure_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeInt32(5, id_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeFloat(6, removedLength_);
          }
          if (this.removedBoundingBox != null) {
            output.writeMessage(7, this.removedBoundingBox);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeFloatSize(1, x_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeFloatSize(2, y_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeFloatSize(3, size_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeFloatSize(4, pressure_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(5, id_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeFloatSize(6, removedLength_);
          }
          if (this.removedBoundingBox != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(7, this.removedBoundingBox);
          }
          return size;
        }

        @Override
        public Pointer mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 13: {
                x_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              }
              case 21: {
                y_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              }
              case 29: {
                size_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              }
              case 37: {
                pressure_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              }
              case 40: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              }
              case 53: {
                removedLength_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              }
              case 58: {
                if (this.removedBoundingBox == null) {
                  this.removedBoundingBox = new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.BoundingBox();
                }
                input.readMessage(this.removedBoundingBox);
                break;
              }
            }
          }
        }

        public static Pointer parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Pointer(), data);
        }

        public static Pointer parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Pointer().mergeFrom(input);
        }
      }

      private static volatile TouchEvent[] _emptyArray;
      public static TouchEvent[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new TouchEvent[0];
            }
          }
        }
        return _emptyArray;
      }

      private int bitField0_;

      // optional uint64 timeOffsetNanos = 1;
      private long timeOffsetNanos_;
      public long getTimeOffsetNanos() {
        return timeOffsetNanos_;
      }
      public TouchEvent setTimeOffsetNanos(long value) {
        timeOffsetNanos_ = value;
        bitField0_ |= 0x00000001;
        return this;
      }
      public boolean hasTimeOffsetNanos() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      public TouchEvent clearTimeOffsetNanos() {
        timeOffsetNanos_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // optional .systemui.Session.TouchEvent.Action action = 2;
      private int action_;
      public int getAction() {
        return action_;
      }
      public TouchEvent setAction(int value) {
        action_ = value;
        bitField0_ |= 0x00000002;
        return this;
      }
      public boolean hasAction() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      public TouchEvent clearAction() {
        action_ = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.DOWN;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // optional int32 actionIndex = 3;
      private int actionIndex_;
      public int getActionIndex() {
        return actionIndex_;
      }
      public TouchEvent setActionIndex(int value) {
        actionIndex_ = value;
        bitField0_ |= 0x00000004;
        return this;
      }
      public boolean hasActionIndex() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      public TouchEvent clearActionIndex() {
        actionIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      // repeated .systemui.Session.TouchEvent.Pointer pointers = 4;
      public com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.Pointer[] pointers;

      // optional bool removed_redacted = 5;
      private boolean removedRedacted_;
      public boolean getRemovedRedacted() {
        return removedRedacted_;
      }
      public TouchEvent setRemovedRedacted(boolean value) {
        removedRedacted_ = value;
        bitField0_ |= 0x00000008;
        return this;
      }
      public boolean hasRemovedRedacted() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      public TouchEvent clearRemovedRedacted() {
        removedRedacted_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // optional .systemui.Session.TouchEvent.BoundingBox removed_boundingBox = 6;
      public com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.BoundingBox removedBoundingBox;

      public TouchEvent() {
        clear();
      }

      public TouchEvent clear() {
        bitField0_ = 0;
        timeOffsetNanos_ = 0L;
        action_ = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.DOWN;
        actionIndex_ = 0;
        pointers = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.Pointer.emptyArray();
        removedRedacted_ = false;
        removedBoundingBox = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt64(1, timeOffsetNanos_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, action_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, actionIndex_);
        }
        if (this.pointers != null && this.pointers.length > 0) {
          for (int i = 0; i < this.pointers.length; i++) {
            com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.Pointer element = this.pointers[i];
            if (element != null) {
              output.writeMessage(4, element);
            }
          }
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeBool(5, removedRedacted_);
        }
        if (this.removedBoundingBox != null) {
          output.writeMessage(6, this.removedBoundingBox);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(1, timeOffsetNanos_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, action_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(3, actionIndex_);
        }
        if (this.pointers != null && this.pointers.length > 0) {
          for (int i = 0; i < this.pointers.length; i++) {
            com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.Pointer element = this.pointers[i];
            if (element != null) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(4, element);
            }
          }
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(5, removedRedacted_);
        }
        if (this.removedBoundingBox != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(6, this.removedBoundingBox);
        }
        return size;
      }

      @Override
      public TouchEvent mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              timeOffsetNanos_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              int value = input.readInt32();
              switch (value) {
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.DOWN:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.UP:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.MOVE:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.CANCEL:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.OUTSIDE:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.POINTER_DOWN:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.POINTER_UP:
                  action_ = value;
                  bitField0_ |= 0x00000002;
                  break;
              }
              break;
            }
            case 24: {
              actionIndex_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 34);
              int i = this.pointers == null ? 0 : this.pointers.length;
              com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.Pointer[] newArray =
                  new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.Pointer[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.pointers, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.Pointer();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.Pointer();
              input.readMessage(newArray[i]);
              this.pointers = newArray;
              break;
            }
            case 40: {
              removedRedacted_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              if (this.removedBoundingBox == null) {
                this.removedBoundingBox = new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.BoundingBox();
              }
              input.readMessage(this.removedBoundingBox);
              break;
            }
          }
        }
      }

      public static TouchEvent parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new TouchEvent(), data);
      }

      public static TouchEvent parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new TouchEvent().mergeFrom(input);
      }
    }

    public static final class SensorEvent extends
        com.google.protobuf.nano.MessageNano {

      // enum Type
      public static final int ACCELEROMETER = 1;
      public static final int GYROSCOPE = 4;
      public static final int LIGHT = 5;
      public static final int PROXIMITY = 8;
      public static final int ROTATION_VECTOR = 11;

      private static volatile SensorEvent[] _emptyArray;
      public static SensorEvent[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new SensorEvent[0];
            }
          }
        }
        return _emptyArray;
      }

      private int bitField0_;

      // optional .systemui.Session.SensorEvent.Type type = 1;
      private int type_;
      public int getType() {
        return type_;
      }
      public SensorEvent setType(int value) {
        type_ = value;
        bitField0_ |= 0x00000001;
        return this;
      }
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      public SensorEvent clearType() {
        type_ = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent.ACCELEROMETER;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // optional uint64 timeOffsetNanos = 2;
      private long timeOffsetNanos_;
      public long getTimeOffsetNanos() {
        return timeOffsetNanos_;
      }
      public SensorEvent setTimeOffsetNanos(long value) {
        timeOffsetNanos_ = value;
        bitField0_ |= 0x00000002;
        return this;
      }
      public boolean hasTimeOffsetNanos() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      public SensorEvent clearTimeOffsetNanos() {
        timeOffsetNanos_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // repeated float values = 3;
      public float[] values;

      // optional uint64 timestamp = 4;
      private long timestamp_;
      public long getTimestamp() {
        return timestamp_;
      }
      public SensorEvent setTimestamp(long value) {
        timestamp_ = value;
        bitField0_ |= 0x00000004;
        return this;
      }
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      public SensorEvent clearTimestamp() {
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public SensorEvent() {
        clear();
      }

      public SensorEvent clear() {
        bitField0_ = 0;
        type_ = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent.ACCELEROMETER;
        timeOffsetNanos_ = 0L;
        values = com.google.protobuf.nano.WireFormatNano.EMPTY_FLOAT_ARRAY;
        timestamp_ = 0L;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, type_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt64(2, timeOffsetNanos_);
        }
        if (this.values != null && this.values.length > 0) {
          for (int i = 0; i < this.values.length; i++) {
            output.writeFloat(3, this.values[i]);
          }
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt64(4, timestamp_);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, type_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(2, timeOffsetNanos_);
        }
        if (this.values != null && this.values.length > 0) {
          int dataSize = 4 * this.values.length;
          size += dataSize;
          size += 1 * this.values.length;
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(4, timestamp_);
        }
        return size;
      }

      @Override
      public SensorEvent mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int value = input.readInt32();
              switch (value) {
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent.ACCELEROMETER:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent.GYROSCOPE:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent.LIGHT:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent.PROXIMITY:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent.ROTATION_VECTOR:
                  type_ = value;
                  bitField0_ |= 0x00000001;
                  break;
              }
              break;
            }
            case 16: {
              timeOffsetNanos_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            }
            case 29: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 29);
              int i = this.values == null ? 0 : this.values.length;
              float[] newArray = new float[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.values, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readFloat();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readFloat();
              this.values = newArray;
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              int arrayLength = length / 4;
              int i = this.values == null ? 0 : this.values.length;
              float[] newArray = new float[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.values, 0, newArray, 0, i);
              }
              for (; i < newArray.length; i++) {
                newArray[i] = input.readFloat();
              }
              this.values = newArray;
              input.popLimit(limit);
              break;
            }
            case 32: {
              timestamp_ = input.readUInt64();
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      }

      public static SensorEvent parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new SensorEvent(), data);
      }

      public static SensorEvent parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new SensorEvent().mergeFrom(input);
      }
    }

    public static final class PhoneEvent extends
        com.google.protobuf.nano.MessageNano {

      // enum Type
      public static final int ON_SCREEN_ON = 0;
      public static final int ON_SCREEN_ON_FROM_TOUCH = 1;
      public static final int ON_SCREEN_OFF = 2;
      public static final int ON_SUCCESSFUL_UNLOCK = 3;
      public static final int ON_BOUNCER_SHOWN = 4;
      public static final int ON_BOUNCER_HIDDEN = 5;
      public static final int ON_QS_DOWN = 6;
      public static final int SET_QS_EXPANDED_TRUE = 7;
      public static final int SET_QS_EXPANDED_FALSE = 8;
      public static final int ON_TRACKING_STARTED = 9;
      public static final int ON_TRACKING_STOPPED = 10;
      public static final int ON_NOTIFICATION_ACTIVE = 11;
      public static final int ON_NOTIFICATION_INACTIVE = 12;
      public static final int ON_NOTIFICATION_DOUBLE_TAP = 13;
      public static final int SET_NOTIFICATION_EXPANDED = 14;
      public static final int RESET_NOTIFICATION_EXPANDED = 15;
      public static final int ON_NOTIFICATION_START_DRAGGING_DOWN = 16;
      public static final int ON_NOTIFICATION_STOP_DRAGGING_DOWN = 17;
      public static final int ON_NOTIFICATION_DISMISSED = 18;
      public static final int ON_NOTIFICATION_START_DISMISSING = 19;
      public static final int ON_NOTIFICATION_STOP_DISMISSING = 20;
      public static final int ON_RIGHT_AFFORDANCE_SWIPING_STARTED = 21;
      public static final int ON_LEFT_AFFORDANCE_SWIPING_STARTED = 22;
      public static final int ON_AFFORDANCE_SWIPING_ABORTED = 23;
      public static final int ON_CAMERA_ON = 24;
      public static final int ON_LEFT_AFFORDANCE_ON = 25;
      public static final int ON_UNLOCK_HINT_STARTED = 26;
      public static final int ON_CAMERA_HINT_STARTED = 27;
      public static final int ON_LEFT_AFFORDANCE_HINT_STARTED = 28;

      private static volatile PhoneEvent[] _emptyArray;
      public static PhoneEvent[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new PhoneEvent[0];
            }
          }
        }
        return _emptyArray;
      }

      private int bitField0_;

      // optional .systemui.Session.PhoneEvent.Type type = 1;
      private int type_;
      public int getType() {
        return type_;
      }
      public PhoneEvent setType(int value) {
        type_ = value;
        bitField0_ |= 0x00000001;
        return this;
      }
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      public PhoneEvent clearType() {
        type_ = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_SCREEN_ON;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // optional uint64 timeOffsetNanos = 2;
      private long timeOffsetNanos_;
      public long getTimeOffsetNanos() {
        return timeOffsetNanos_;
      }
      public PhoneEvent setTimeOffsetNanos(long value) {
        timeOffsetNanos_ = value;
        bitField0_ |= 0x00000002;
        return this;
      }
      public boolean hasTimeOffsetNanos() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      public PhoneEvent clearTimeOffsetNanos() {
        timeOffsetNanos_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public PhoneEvent() {
        clear();
      }

      public PhoneEvent clear() {
        bitField0_ = 0;
        type_ = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_SCREEN_ON;
        timeOffsetNanos_ = 0L;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, type_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt64(2, timeOffsetNanos_);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, type_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(2, timeOffsetNanos_);
        }
        return size;
      }

      @Override
      public PhoneEvent mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int value = input.readInt32();
              switch (value) {
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_SCREEN_ON:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_SCREEN_ON_FROM_TOUCH:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_SCREEN_OFF:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_SUCCESSFUL_UNLOCK:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_BOUNCER_SHOWN:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_BOUNCER_HIDDEN:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_QS_DOWN:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.SET_QS_EXPANDED_TRUE:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.SET_QS_EXPANDED_FALSE:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_TRACKING_STARTED:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_TRACKING_STOPPED:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_NOTIFICATION_ACTIVE:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_NOTIFICATION_INACTIVE:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_NOTIFICATION_DOUBLE_TAP:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.SET_NOTIFICATION_EXPANDED:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.RESET_NOTIFICATION_EXPANDED:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_NOTIFICATION_START_DRAGGING_DOWN:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_NOTIFICATION_STOP_DRAGGING_DOWN:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_NOTIFICATION_DISMISSED:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_NOTIFICATION_START_DISMISSING:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_NOTIFICATION_STOP_DISMISSING:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_RIGHT_AFFORDANCE_SWIPING_STARTED:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_LEFT_AFFORDANCE_SWIPING_STARTED:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_AFFORDANCE_SWIPING_ABORTED:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_CAMERA_ON:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_LEFT_AFFORDANCE_ON:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_UNLOCK_HINT_STARTED:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_CAMERA_HINT_STARTED:
                case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.ON_LEFT_AFFORDANCE_HINT_STARTED:
                  type_ = value;
                  bitField0_ |= 0x00000001;
                  break;
              }
              break;
            }
            case 16: {
              timeOffsetNanos_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      }

      public static PhoneEvent parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new PhoneEvent(), data);
      }

      public static PhoneEvent parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new PhoneEvent().mergeFrom(input);
      }
    }

    private static volatile Session[] _emptyArray;
    public static Session[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Session[0];
          }
        }
      }
      return _emptyArray;
    }

    private int bitField0_;

    // optional uint64 startTimestampMillis = 1;
    private long startTimestampMillis_;
    public long getStartTimestampMillis() {
      return startTimestampMillis_;
    }
    public Session setStartTimestampMillis(long value) {
      startTimestampMillis_ = value;
      bitField0_ |= 0x00000001;
      return this;
    }
    public boolean hasStartTimestampMillis() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    public Session clearStartTimestampMillis() {
      startTimestampMillis_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    // optional uint64 durationMillis = 2;
    private long durationMillis_;
    public long getDurationMillis() {
      return durationMillis_;
    }
    public Session setDurationMillis(long value) {
      durationMillis_ = value;
      bitField0_ |= 0x00000002;
      return this;
    }
    public boolean hasDurationMillis() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    public Session clearDurationMillis() {
      durationMillis_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    // optional string build = 3;
    private java.lang.String build_;
    public java.lang.String getBuild() {
      return build_;
    }
    public Session setBuild(java.lang.String value) {
      if (value == null) {
        throw new java.lang.NullPointerException();
      }
      build_ = value;
      bitField0_ |= 0x00000004;
      return this;
    }
    public boolean hasBuild() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    public Session clearBuild() {
      build_ = "";
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    // optional .systemui.Session.Result result = 4;
    private int result_;
    public int getResult() {
      return result_;
    }
    public Session setResult(int value) {
      result_ = value;
      bitField0_ |= 0x00000008;
      return this;
    }
    public boolean hasResult() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    public Session clearResult() {
      result_ = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.FAILURE;
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    // repeated .systemui.Session.TouchEvent touchEvents = 5;
    public com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent[] touchEvents;

    // repeated .systemui.Session.SensorEvent sensorEvents = 6;
    public com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent[] sensorEvents;

    // optional int32 touchAreaWidth = 9;
    private int touchAreaWidth_;
    public int getTouchAreaWidth() {
      return touchAreaWidth_;
    }
    public Session setTouchAreaWidth(int value) {
      touchAreaWidth_ = value;
      bitField0_ |= 0x00000010;
      return this;
    }
    public boolean hasTouchAreaWidth() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    public Session clearTouchAreaWidth() {
      touchAreaWidth_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    // optional int32 touchAreaHeight = 10;
    private int touchAreaHeight_;
    public int getTouchAreaHeight() {
      return touchAreaHeight_;
    }
    public Session setTouchAreaHeight(int value) {
      touchAreaHeight_ = value;
      bitField0_ |= 0x00000020;
      return this;
    }
    public boolean hasTouchAreaHeight() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    public Session clearTouchAreaHeight() {
      touchAreaHeight_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    // optional .systemui.Session.Type type = 11;
    private int type_;
    public int getType() {
      return type_;
    }
    public Session setType(int value) {
      type_ = value;
      bitField0_ |= 0x00000040;
      return this;
    }
    public boolean hasType() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    public Session clearType() {
      type_ = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.RESERVED_1;
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    // repeated .systemui.Session.PhoneEvent phoneEvents = 12;
    public com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent[] phoneEvents;

    public Session() {
      clear();
    }

    public Session clear() {
      bitField0_ = 0;
      startTimestampMillis_ = 0L;
      durationMillis_ = 0L;
      build_ = "";
      result_ = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.FAILURE;
      touchEvents = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent.emptyArray();
      sensorEvents = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent.emptyArray();
      touchAreaWidth_ = 0;
      touchAreaHeight_ = 0;
      type_ = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.RESERVED_1;
      phoneEvents = com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, startTimestampMillis_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(2, durationMillis_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeString(3, build_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, result_);
      }
      if (this.touchEvents != null && this.touchEvents.length > 0) {
        for (int i = 0; i < this.touchEvents.length; i++) {
          com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent element = this.touchEvents[i];
          if (element != null) {
            output.writeMessage(5, element);
          }
        }
      }
      if (this.sensorEvents != null && this.sensorEvents.length > 0) {
        for (int i = 0; i < this.sensorEvents.length; i++) {
          com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent element = this.sensorEvents[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(9, touchAreaWidth_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(10, touchAreaHeight_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(11, type_);
      }
      if (this.phoneEvents != null && this.phoneEvents.length > 0) {
        for (int i = 0; i < this.phoneEvents.length; i++) {
          com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent element = this.phoneEvents[i];
          if (element != null) {
            output.writeMessage(12, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, startTimestampMillis_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(2, durationMillis_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, build_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(4, result_);
      }
      if (this.touchEvents != null && this.touchEvents.length > 0) {
        for (int i = 0; i < this.touchEvents.length; i++) {
          com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent element = this.touchEvents[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(5, element);
          }
        }
      }
      if (this.sensorEvents != null && this.sensorEvents.length > 0) {
        for (int i = 0; i < this.sensorEvents.length; i++) {
          com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent element = this.sensorEvents[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(9, touchAreaWidth_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(10, touchAreaHeight_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(11, type_);
      }
      if (this.phoneEvents != null && this.phoneEvents.length > 0) {
        for (int i = 0; i < this.phoneEvents.length; i++) {
          com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent element = this.phoneEvents[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(12, element);
          }
        }
      }
      return size;
    }

    @Override
    public Session mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            startTimestampMillis_ = input.readUInt64();
            bitField0_ |= 0x00000001;
            break;
          }
          case 16: {
            durationMillis_ = input.readUInt64();
            bitField0_ |= 0x00000002;
            break;
          }
          case 26: {
            build_ = input.readString();
            bitField0_ |= 0x00000004;
            break;
          }
          case 32: {
            int value = input.readInt32();
            switch (value) {
              case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.FAILURE:
              case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SUCCESS:
              case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.UNKNOWN:
                result_ = value;
                bitField0_ |= 0x00000008;
                break;
            }
            break;
          }
          case 42: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 42);
            int i = this.touchEvents == null ? 0 : this.touchEvents.length;
            com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent[] newArray =
                new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.touchEvents, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.TouchEvent();
            input.readMessage(newArray[i]);
            this.touchEvents = newArray;
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.sensorEvents == null ? 0 : this.sensorEvents.length;
            com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent[] newArray =
                new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.sensorEvents, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.SensorEvent();
            input.readMessage(newArray[i]);
            this.sensorEvents = newArray;
            break;
          }
          case 72: {
            touchAreaWidth_ = input.readInt32();
            bitField0_ |= 0x00000010;
            break;
          }
          case 80: {
            touchAreaHeight_ = input.readInt32();
            bitField0_ |= 0x00000020;
            break;
          }
          case 88: {
            int value = input.readInt32();
            switch (value) {
              case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.RESERVED_1:
              case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.RESERVED_2:
              case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.RANDOM_WAKEUP:
              case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.REAL:
              case com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.REJECTED_TOUCH_REPORT:
                type_ = value;
                bitField0_ |= 0x00000040;
                break;
            }
            break;
          }
          case 98: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 98);
            int i = this.phoneEvents == null ? 0 : this.phoneEvents.length;
            com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent[] newArray =
                new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.phoneEvents, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session.PhoneEvent();
            input.readMessage(newArray[i]);
            this.phoneEvents = newArray;
            break;
          }
        }
      }
    }

    public static Session parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Session(), data);
    }

    public static Session parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Session().mergeFrom(input);
    }
  }
}
